{
  "contractName": "TokenFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_usdt",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "Validator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "collateralToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nfts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "ipfsHash",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "authenticate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "collateralLocked",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "liquidityRemoved",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "reedemDiamond",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "nftLocked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rftToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "tokenCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_diamondPrice",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "createCollectible",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_diamondId",
          "type": "uint256"
        }
      ],
      "name": "requestDiamondLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_diamondId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_authencity",
          "type": "bool"
        }
      ],
      "name": "approveDiamondAuthencity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_diamondId",
          "type": "uint256"
        }
      ],
      "name": "addDiamondLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_diamondId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "reedemDiamond",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_diamondId",
          "type": "uint256"
        }
      ],
      "name": "repayDiamond",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_usdt\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Validator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_diamondId\",\"type\":\"uint256\"}],\"name\":\"addDiamondLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_diamondId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_authencity\",\"type\":\"bool\"}],\"name\":\"approveDiamondAuthencity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_diamondPrice\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"createCollectible\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nfts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"authenticate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"collateralLocked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"liquidityRemoved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reedemDiamond\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nftLocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_diamondId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reedemDiamond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_diamondId\",\"type\":\"uint256\"}],\"name\":\"repayDiamond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_diamondId\",\"type\":\"uint256\"}],\"name\":\"requestDiamondLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rftToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/newsgate/Work/RFT-Batch-NFT/src/contracts/TokenFactory.sol\":\"TokenFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/newsgate/Work/RFT-Batch-NFT/src/contracts/TokenFactory.sol\":{\"keccak256\":\"0xf3c2bf1588aa6b28b8b13875fc1b4ec1946d010261388ee2165f6e46e8d5173c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec645152348ee9d7aa8410addf5189ddc7043c956c88a5e665622bf9b60e6027\",\"dweb:/ipfs/QmR2tazcnjmRLnNDDsFyH5dHifMETtBAQPbnCseT9nyDrv\"]},\"/Users/newsgate/Work/RFT-Batch-NFT/src/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x5de5fb42010129e8fdf2839ea1e593e91669d17d2a3552f9c203c04102783def\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a33df46345f8287b764f3acb5448699bf5405c98bf8aa453b902d69b7927565b\",\"dweb:/ipfs/QmdfYqfKFbEH9RLqGxAeFzLjvJQ1YAaiZCtu2r1So1r3DJ\"]},\"/Users/newsgate/Work/RFT-Batch-NFT/src/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x98fac37221212c8f126f198d262a4df86394bd1a9969f61e40739fe8ac013dd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f98a3c51ff54e1d19c8845da55415c85b4f28c81c0c3b1361eb6eaa905a0c6\",\"dweb:/ipfs/QmTZxiScs2HXZRtscWGjBBXmG4qeFGk1Bq8FGzhbWi1wr3\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2d9f9af8b84d252e0e7ee716e4cb3ad1b58f3ec6619e4f54f40d4b5e28f75eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d6abdcb4cd5be9933f526b53f21008e9a7ab75ce134478625cc8ccd3c1a638\",\"dweb:/ipfs/QmZrzWUYmNANRCvHaMGsJQXYnWCe6HvMmvrqaPn1GEcpJ1\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xd03f5c3d258a9b0f751a3246e0802106585561ab5909b808368759364fc786f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89e3562a13d6acd5c6c0ce1c657f1ea1b472878c30a2f88528e721f2d3b4117\",\"dweb:/ipfs/QmToL4MkNtn4BFipo6neazAsXwpcUxxhBBCkA6yVSLUAe9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x62d306ff0499a11913bc60b5939eec619509b5c67b30e86ebf8b8bda0b7a7fee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6712ca27a06062db31465b1470e6207553553a9bb0b4358d918b35bdae5b4ffe\",\"dweb:/ipfs/QmZ92pU9DJ3h1qREMFvDQhArSy6fh6zA983NeLFHRs1qKJ\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162005fd138038062005fd1833981810160405281019062000037919062000410565b6040518060400160405280600781526020017f4469616d6f6e64000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f444d4700000000000000000000000000000000000000000000000000000000008152508160009080519060200190620000bb92919062000349565b508060019080519060200190620000d492919062000349565b505050600060088190555081600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001856000801b62000179620001ce60201b60201c565b620001d660201b60201c565b33600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000518565b600033905090565b620001e88282620001ec60201b60201c565b5050565b620001fe8282620002de60201b60201c565b620002da5760016007600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200027f620001ce60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006007600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054620003579062000499565b90600052602060002090601f0160209004810192826200037b5760008555620003c7565b82601f106200039657805160ff1916838001178555620003c7565b82800160010185558215620003c7579182015b82811115620003c6578251825591602001919060010190620003a9565b5b509050620003d69190620003da565b5090565b5b80821115620003f5576000816000905550600101620003db565b5090565b6000815190506200040a81620004fe565b92915050565b600080604083850312156200042457600080fd5b60006200043485828601620003f9565b92505060206200044785828601620003f9565b9150509250929050565b60006200045e8262000479565b9050919050565b6000620004728262000451565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006002820490506001821680620004b257607f821691505b60208210811415620004c957620004c8620004cf565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b620005098162000465565b81146200051557600080fd5b50565b615aa980620005286000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806389344d1f1161010f578063c87b56dd116100a2578063da3ec8f911610071578063da3ec8f9146105e2578063e67ed45414610600578063e985e9c51461061c578063f340fa011461064c576101f0565b8063c87b56dd1461055c578063caacac961461058c578063d082e381146105a8578063d547741f146105c6576101f0565b8063a22cb465116100de578063a22cb465146104ea578063a62e555c14610506578063b2016bd414610522578063b88d4fde14610540576101f0565b806389344d1f1461046257806391d148541461047e57806395d89b41146104ae578063a217fddf146104cc576101f0565b80632f2ff15d1161018757806359802f781161015657806359802f78146103c85780636352211e146103e45780636d43ecc61461041457806370a0823114610432576101f0565b80632f2ff15d1461034457806336568abe1461036057806342842e0e1461037c5780635101126414610398576101f0565b8063150b7a02116101c3578063150b7a021461028f57806323b872dd146102bf578063248a9ca3146102db578063265aa6211461030b576101f0565b806301ffc9a7146101f557806306fdde0314610225578063081812fc14610243578063095ea7b314610273575b600080fd5b61020f600480360381019061020a919061442e565b61067c565b60405161021c919061513d565b60405180910390f35b61022d61068e565b60405161023a91906151a9565b60405180910390f35b61025d600480360381019061025891906144ff565b610720565b60405161026a9190615076565b60405180910390f35b61028d60048036038101906102889190614364565b6107a5565b005b6102a960048036038101906102a491906142ad565b6108bd565b6040516102b69190615173565b60405180910390f35b6102d960048036038101906102d4919061425e565b6108d1565b005b6102f560048036038101906102f091906143c9565b610931565b6040516103029190615158565b60405180910390f35b610325600480360381019061032091906144ff565b610951565b60405161033b9a999897969594939291906154e6565b60405180910390f35b61035e600480360381019061035991906143f2565b610b16565b005b61037a600480360381019061037591906143f2565b610b3f565b005b6103966004803603810190610391919061425e565b610bc2565b005b6103b260048036038101906103ad9190614480565b610be2565b6040516103bf91906154cb565b60405180910390f35b6103e260048036038101906103dd91906144ff565b610dd7565b005b6103fe60048036038101906103f991906144ff565b6111a0565b60405161040b9190615076565b60405180910390f35b61041c611252565b6040516104299190615076565b60405180910390f35b61044c600480360381019061044791906141f9565b611278565b60405161045991906154cb565b60405180910390f35b61047c6004803603810190610477919061458d565b611330565b005b610498600480360381019061049391906143f2565b611821565b6040516104a5919061513d565b60405180910390f35b6104b661188c565b6040516104c391906151a9565b60405180910390f35b6104d461191e565b6040516104e19190615158565b60405180910390f35b61050460048036038101906104ff9190614328565b611925565b005b610520600480360381019061051b91906144ff565b611aa6565b005b61052a611ec6565b604051610537919061518e565b60405180910390f35b61055a600480360381019061055591906142ad565b611eec565b005b610576600480360381019061057191906144ff565b611f4e565b60405161058391906151a9565b60405180910390f35b6105a660048036038101906105a19190614551565b6120a0565b005b6105b06125a7565b6040516105bd91906154cb565b60405180910390f35b6105e060048036038101906105db91906143f2565b6125ad565b005b6105ea6125d6565b6040516105f7919061518e565b60405180910390f35b61061a600480360381019061061591906144ff565b6125fc565b005b61063660048036038101906106319190614222565b612c7a565b604051610643919061513d565b60405180910390f35b610666600480360381019061066191906141f9565b612d0e565b60405161067391906154cb565b60405180910390f35b600061068782612d26565b9050919050565b60606000805461069d90615887565b80601f01602080910402602001604051908101604052809291908181526020018280546106c990615887565b80156107165780601f106106eb57610100808354040283529160200191610716565b820191906000526020600020905b8154815290600101906020018083116106f957829003601f168201915b5050505050905090565b600061072b82612da0565b61076a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610761906153eb565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006107b0826111a0565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610821576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108189061544b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610840612e0c565b73ffffffffffffffffffffffffffffffffffffffff16148061086f575061086e81610869612e0c565b612c7a565b5b6108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a5906152eb565b60405180910390fd5b6108b88383612e14565b505050565b600063150b7a0260e01b9050949350505050565b6108e26108dc612e0c565b82612ecd565b610921576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109189061548b565b60405180910390fd5b61092c838383612fab565b505050565b600060076000838152602001908152602001600020600101549050919050565b600c60205280600052604060002060009150905080600001549080600101805461097a90615887565b80601f01602080910402602001604051908101604052809291908181526020018280546109a690615887565b80156109f35780601f106109c8576101008083540402835291602001916109f3565b820191906000526020600020905b8154815290600101906020018083116109d657829003601f168201915b505050505090806002018054610a0890615887565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3490615887565b8015610a815780601f10610a5657610100808354040283529160200191610a81565b820191906000526020600020905b815481529060010190602001808311610a6457829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900460ff16908060050160029054906101000a900460ff16908060050160039054906101000a900460ff16908060050160049054906101000a900460ff1690508a565b610b1f82610931565b610b3081610b2b612e0c565b613207565b610b3a83836132a4565b505050565b610b47612e0c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bab906154ab565b60405180910390fd5b610bbe8282613385565b5050565b610bdd83838360405180602001604052806000815250611eec565b505050565b60006001600854610bf39190615664565b60088190555060006008549050610c0a3382613467565b610c148184613485565b6040518061014001604052808281526020018681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200185815260200160001515815260200160001515815260200160001515815260200160001515815260200160001515815250600c6000838152602001908152602001600020600082015181600001556020820151816001019080519060200190610cb8929190613fde565b506040820151816002019080519060200190610cd5929190613fde565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e08201518160050160026101000a81548160ff0219169083151502179055506101008201518160050160036101000a81548160ff0219169083151502179055506101208201518160050160046101000a81548160ff021916908315150217905550905050809150509392505050565b6000600c60008381526020019081526020016000206040518061014001604052908160008201548152602001600182018054610e1290615887565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3e90615887565b8015610e8b5780601f10610e6057610100808354040283529160200191610e8b565b820191906000526020600020905b815481529060010190602001808311610e6e57829003601f168201915b50505050508152602001600282018054610ea490615887565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed090615887565b8015610f1d5780601f10610ef257610100808354040283529160200191610f1d565b820191906000526020600020905b815481529060010190602001808311610f0057829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff161515151581526020016005820160029054906101000a900460ff161515151581526020016005820160039054906101000a900460ff161515151581526020016005820160049054906101000a900460ff161515151581525050905060018161012001901515908115158152505080600c600084815260200190815260200160002060008201518160000155602082015181600101908051906020019061105b929190613fde565b506040820151816002019080519060200190611078929190613fde565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e08201518160050160026101000a81548160ff0219169083151502179055506101008201518160050160036101000a81548160ff0219169083151502179055506101208201518160050160046101000a81548160ff02191690831515021790555090505061119c33600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610bc2565b5050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611249576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112409061532b565b60405180910390fd5b80915050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e09061530b565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600c6000848152602001908152602001600020604051806101400160405290816000820154815260200160018201805461136b90615887565b80601f016020809104026020016040519081016040528092919081815260200182805461139790615887565b80156113e45780601f106113b9576101008083540402835291602001916113e4565b820191906000526020600020905b8154815290600101906020018083116113c757829003601f168201915b505050505081526020016002820180546113fd90615887565b80601f016020809104026020016040519081016040528092919081815260200182805461142990615887565b80156114765780601f1061144b57610100808354040283529160200191611476565b820191906000526020600020905b81548152906001019060200180831161145957829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff161515151581526020016005820160029054906101000a900460ff161515151581526020016005820160039054906101000a900460ff161515151581526020016005820160049054906101000a900460ff161515151581525050905081816080015110156115af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a69061526b565b60405180910390fd5b806101000151156115f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ec9061536b565b60405180910390fd5b60018161010001901515908115158152505060018160e001901515908115158152505080600c6000858152602001908152602001600020600082015181600001556020820151816001019080519060200190611652929190613fde565b50604082015181600201908051906020019061166f929190613fde565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e08201518160050160026101000a81548160ff0219169083151502179055506101008201518160050160036101000a81548160ff0219169083151502179055506101208201518160050160046101000a81548160ff021916908315150217905550905050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd333084608001516040518463ffffffff1660e01b81526004016117c993929190615091565b602060405180830381600087803b1580156117e357600080fd5b505af11580156117f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181b91906143a0565b50505050565b60006007600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60606001805461189b90615887565b80601f01602080910402602001604051908101604052809291908181526020018280546118c790615887565b80156119145780601f106118e957610100808354040283529160200191611914565b820191906000526020600020905b8154815290600101906020018083116118f757829003601f168201915b5050505050905090565b6000801b81565b61192d612e0c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561199b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611992906152ab565b60405180910390fd5b80600560006119a8612e0c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611a55612e0c565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611a9a919061513d565b60405180910390a35050565b611aba6000801b611ab5612e0c565b611821565b611af9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af09061522b565b60405180910390fd5b6000600c60008381526020019081526020016000206040518061014001604052908160008201548152602001600182018054611b3490615887565b80601f0160208091040260200160405190810160405280929190818152602001828054611b6090615887565b8015611bad5780601f10611b8257610100808354040283529160200191611bad565b820191906000526020600020905b815481529060010190602001808311611b9057829003601f168201915b50505050508152602001600282018054611bc690615887565b80601f0160208091040260200160405190810160405280929190818152602001828054611bf290615887565b8015611c3f5780601f10611c1457610100808354040283529160200191611c3f565b820191906000526020600020905b815481529060010190602001808311611c2257829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff161515151581526020016005820160029054906101000a900460ff161515151581526020016005820160039054906101000a900460ff161515151581526020016005820160049054906101000a900460ff161515151581525050905060008161012001901515908115158152505080600c6000848152602001908152602001600020600082015181600001556020820151816001019080519060200190611d7d929190613fde565b506040820151816002019080519060200190611d9a929190613fde565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e08201518160050160026101000a81548160ff0219169083151502179055506101008201518160050160036101000a81548160ff0219169083151502179055506101208201518160050160046101000a81548160ff021916908315150217905550905050611ec2600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826060015184610bc2565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611efd611ef7612e0c565b83612ecd565b611f3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f339061548b565b60405180910390fd5b611f48848484846134f9565b50505050565b6060611f5982612da0565b611f98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f8f906153cb565b60405180910390fd5b6000600660008481526020019081526020016000208054611fb890615887565b80601f0160208091040260200160405190810160405280929190818152602001828054611fe490615887565b80156120315780601f1061200657610100808354040283529160200191612031565b820191906000526020600020905b81548152906001019060200180831161201457829003601f168201915b505050505090506000612042613555565b905060008151141561205857819250505061209b565b60008251111561208d578082604051602001612075929190615018565b6040516020818303038152906040529250505061209b565b6120968461356c565b925050505b919050565b6120b46000801b6120af612e0c565b611821565b6120f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ea9061522b565b60405180910390fd5b6000600c6000848152602001908152602001600020604051806101400160405290816000820154815260200160018201805461212e90615887565b80601f016020809104026020016040519081016040528092919081815260200182805461215a90615887565b80156121a75780601f1061217c576101008083540402835291602001916121a7565b820191906000526020600020905b81548152906001019060200180831161218a57829003601f168201915b505050505081526020016002820180546121c090615887565b80601f01602080910402602001604051908101604052809291908181526020018280546121ec90615887565b80156122395780601f1061220e57610100808354040283529160200191612239565b820191906000526020600020905b81548152906001019060200180831161221c57829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff161515151581526020016005820160029054906101000a900460ff161515151581526020016005820160039054906101000a900460ff161515151581526020016005820160049054906101000a900460ff1615151515815250509050818160a0019015159081151581525050811561241057600181610120019015159081151581525050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3826060015183608001516040518363ffffffff1660e01b81526004016123b8929190615114565b602060405180830381600087803b1580156123d257600080fd5b505af11580156123e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240a91906143a0565b50612454565b600081610120019015159081151581525050612453600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826060015185610bc2565b5b80600c600085815260200190815260200160002060008201518160000155602082015181600101908051906020019061248e929190613fde565b5060408201518160020190805190602001906124ab929190613fde565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e08201518160050160026101000a81548160ff0219169083151502179055506101008201518160050160036101000a81548160ff0219169083151502179055506101208201518160050160046101000a81548160ff021916908315150217905550905050505050565b60085481565b6125b682610931565b6125c7816125c2612e0c565b613207565b6125d18383613385565b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c6000838152602001908152602001600020604051806101400160405290816000820154815260200160018201805461263790615887565b80601f016020809104026020016040519081016040528092919081815260200182805461266390615887565b80156126b05780601f10612685576101008083540402835291602001916126b0565b820191906000526020600020905b81548152906001019060200180831161269357829003601f168201915b505050505081526020016002820180546126c990615887565b80601f01602080910402602001604051908101604052809291908181526020018280546126f590615887565b80156127425780601f1061271757610100808354040283529160200191612742565b820191906000526020600020905b81548152906001019060200180831161272557829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff161515151581526020016005820160029054906101000a900460ff161515151581526020016005820160039054906101000a900460ff161515151581526020016005820160049054906101000a900460ff16151515158152505090508060800151600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016128949190615076565b60206040518083038186803b1580156128ac57600080fd5b505afa1580156128c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e49190614528565b11612924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161291b9061538b565b60405180910390fd5b8060a00151612968576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161295f9061524b565b60405180910390fd5b8060c00151156129ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129a49061546b565b60405180910390fd5b60018160c001901515908115158152505080600c60008481526020019081526020016000206000820151816000015560208201518160010190805190602001906129f8929190613fde565b506040820151816002019080519060200190612a15929190613fde565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e08201518160050160026101000a81548160ff0219169083151502179055506101008201518160050160036101000a81548160ff0219169083151502179055506101208201518160050160046101000a81548160ff021916908315150217905550905050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd333084608001516040518463ffffffff1660e01b8152600401612b6f93929190615091565b602060405180830381600087803b158015612b8957600080fd5b505af1158015612b9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bc191906143a0565b50600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3383608001516040518363ffffffff1660e01b8152600401612c23929190615114565b602060405180830381600087803b158015612c3d57600080fd5b505af1158015612c51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c7591906143a0565b505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600d6020528060005260406000206000915090505481565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612d995750612d9882613613565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16612e87836111a0565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000612ed882612da0565b612f17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f0e906152cb565b60405180910390fd5b6000612f22836111a0565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612f9157508373ffffffffffffffffffffffffffffffffffffffff16612f7984610720565b73ffffffffffffffffffffffffffffffffffffffff16145b80612fa25750612fa18185612c7a565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16612fcb826111a0565b73ffffffffffffffffffffffffffffffffffffffff1614613021576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130189061540b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613091576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130889061528b565b60405180910390fd5b61309c8383836136f5565b6130a7600082612e14565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546130f79190615745565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461314e9190615664565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6132118282611821565b6132a0576132368173ffffffffffffffffffffffffffffffffffffffff1660146136fa565b6132448360001c60206136fa565b60405160200161325592919061503c565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161329791906151a9565b60405180910390fd5b5050565b6132ae8282611821565b6133815760016007600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550613326612e0c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61338f8282611821565b156134635760006007600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550613408612e0c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6134818282604051806020016040528060008152506139f4565b5050565b61348e82612da0565b6134cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016134c49061534b565b60405180910390fd5b806006600084815260200190815260200160002090805190602001906134f4929190613fde565b505050565b613504848484612fab565b61351084848484613a4f565b61354f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613546906151eb565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606061357782612da0565b6135b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135ad9061542b565b60405180910390fd5b60006135c0613555565b905060008151116135e0576040518060200160405280600081525061360b565b806135ea84613be6565b6040516020016135fb929190615018565b6040516020818303038152906040525b915050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806136de57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806136ee57506136ed82613d93565b5b9050919050565b505050565b60606000600283600261370d91906156eb565b6137179190615664565b67ffffffffffffffff811115613756577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156137885781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106137e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110613870577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026138b091906156eb565b6138ba9190615664565b90505b60018111156139a6577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110613922577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b82828151811061395f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061399f9061585d565b90506138bd565b50600084146139ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016139e1906151cb565b60405180910390fd5b8091505092915050565b6139fe8383613dfd565b613a0b6000848484613a4f565b613a4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613a41906151eb565b60405180910390fd5b505050565b6000613a708473ffffffffffffffffffffffffffffffffffffffff16613fcb565b15613bd9578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02613a99612e0c565b8786866040518563ffffffff1660e01b8152600401613abb94939291906150c8565b602060405180830381600087803b158015613ad557600080fd5b505af1925050508015613b0657506040513d601f19601f82011682018060405250810190613b039190614457565b60015b613b89573d8060008114613b36576040519150601f19603f3d011682016040523d82523d6000602084013e613b3b565b606091505b50600081511415613b81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613b78906151eb565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050613bde565b600190505b949350505050565b60606000821415613c2e576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050613d8e565b600082905060005b60008214613c60578080613c49906158b9565b915050600a82613c5991906156ba565b9150613c36565b60008167ffffffffffffffff811115613ca2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015613cd45781602001600182028036833780820191505090505b5090505b60008514613d8757600182613ced9190615745565b9150600a85613cfc9190615902565b6030613d089190615664565b60f81b818381518110613d44577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85613d8091906156ba565b9450613cd8565b8093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613e6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613e64906153ab565b60405180910390fd5b613e7681612da0565b15613eb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613ead9061520b565b60405180910390fd5b613ec2600083836136f5565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254613f129190615664565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b828054613fea90615887565b90600052602060002090601f01602090048101928261400c5760008555614053565b82601f1061402557805160ff1916838001178555614053565b82800160010185558215614053579182015b82811115614052578251825591602001919060010190614037565b5b5090506140609190614064565b5090565b5b8082111561407d576000816000905550600101614065565b5090565b600061409461408f846155c1565b615590565b9050828152602081018484840111156140ac57600080fd5b6140b784828561581b565b509392505050565b60006140d26140cd846155f1565b615590565b9050828152602081018484840111156140ea57600080fd5b6140f584828561581b565b509392505050565b60008135905061410c81615a00565b92915050565b60008135905061412181615a17565b92915050565b60008151905061413681615a17565b92915050565b60008135905061414b81615a2e565b92915050565b60008135905061416081615a45565b92915050565b60008151905061417581615a45565b92915050565b600082601f83011261418c57600080fd5b813561419c848260208601614081565b91505092915050565b600082601f8301126141b657600080fd5b81356141c68482602086016140bf565b91505092915050565b6000813590506141de81615a5c565b92915050565b6000815190506141f381615a5c565b92915050565b60006020828403121561420b57600080fd5b6000614219848285016140fd565b91505092915050565b6000806040838503121561423557600080fd5b6000614243858286016140fd565b9250506020614254858286016140fd565b9150509250929050565b60008060006060848603121561427357600080fd5b6000614281868287016140fd565b9350506020614292868287016140fd565b92505060406142a3868287016141cf565b9150509250925092565b600080600080608085870312156142c357600080fd5b60006142d1878288016140fd565b94505060206142e2878288016140fd565b93505060406142f3878288016141cf565b925050606085013567ffffffffffffffff81111561431057600080fd5b61431c8782880161417b565b91505092959194509250565b6000806040838503121561433b57600080fd5b6000614349858286016140fd565b925050602061435a85828601614112565b9150509250929050565b6000806040838503121561437757600080fd5b6000614385858286016140fd565b9250506020614396858286016141cf565b9150509250929050565b6000602082840312156143b257600080fd5b60006143c084828501614127565b91505092915050565b6000602082840312156143db57600080fd5b60006143e98482850161413c565b91505092915050565b6000806040838503121561440557600080fd5b60006144138582860161413c565b9250506020614424858286016140fd565b9150509250929050565b60006020828403121561444057600080fd5b600061444e84828501614151565b91505092915050565b60006020828403121561446957600080fd5b600061447784828501614166565b91505092915050565b60008060006060848603121561449557600080fd5b600084013567ffffffffffffffff8111156144af57600080fd5b6144bb868287016141a5565b93505060206144cc868287016141cf565b925050604084013567ffffffffffffffff8111156144e957600080fd5b6144f5868287016141a5565b9150509250925092565b60006020828403121561451157600080fd5b600061451f848285016141cf565b91505092915050565b60006020828403121561453a57600080fd5b6000614548848285016141e4565b91505092915050565b6000806040838503121561456457600080fd5b6000614572858286016141cf565b925050602061458385828601614112565b9150509250929050565b600080604083850312156145a057600080fd5b60006145ae858286016141cf565b92505060206145bf858286016141cf565b9150509250929050565b6145d281615779565b82525050565b6145e18161578b565b82525050565b6145f081615797565b82525050565b6145ff816157a1565b82525050565b600061461082615621565b61461a8185615637565b935061462a81856020860161582a565b614633816159ef565b840191505092915050565b614647816157f7565b82525050565b60006146588261562c565b6146628185615648565b935061467281856020860161582a565b61467b816159ef565b840191505092915050565b60006146918261562c565b61469b8185615659565b93506146ab81856020860161582a565b80840191505092915050565b60006146c4602083615648565b91507f537472696e67733a20686578206c656e67746820696e73756666696369656e746000830152602082019050919050565b6000614704603283615648565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b600061476a601c83615648565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b60006147aa601f83615648565b91507f41727468506f6f6c3a20596f7520617265206e6f74207468652061646d696e006000830152602082019050919050565b60006147ea603983615648565b91507f546f6b656e20466163746f72792038333a204e6f7420416e2041757468656e7460008301527f6963204469616d6f6e6420526570726573656e746174696f6e000000000000006020830152604082019050919050565b6000614850603383615648565b91507f546f6b656e20466163746f7279203131323a204e6f7420456e6f75676820526560008301527f6564656d61626c6520436f6c6c61746572616c000000000000000000000000006020830152604082019050919050565b60006148b6602483615648565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061491c601983615648565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b600061495c602c83615648565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006149c2603883615648565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000614a28602a83615648565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000614a8e602983615648565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000614af4602e83615648565b91507f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008301527f6578697374656e7420746f6b656e0000000000000000000000000000000000006020830152604082019050919050565b6000614b5a602b83615648565b91507f546f6b656e20466163746f7279203131333a20416c7265616479204469616d6f60008301527f6e642052656564656d65640000000000000000000000000000000000000000006020830152604082019050919050565b6000614bc0602f83615648565b91507f546f6b656e20466163746f72792038323a20496e737566666963656e7420436f60008301527f6c6c61746572616c20416d6f756e7400000000000000000000000000000000006020830152604082019050919050565b6000614c26602083615648565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000614c66603183615648565b91507f45524337323155524953746f726167653a2055524920717565727920666f722060008301527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006020830152604082019050919050565b6000614ccc602c83615648565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000614d32602983615648565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000614d98602f83615648565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000614dfe602183615648565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614e64602b83615648565b91507f546f6b656e20466163746f72792038343a20416c72656164792041646465642060008301527f4c69717569646174696f6e0000000000000000000000000000000000000000006020830152604082019050919050565b6000614eca603183615648565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000614f30601783615659565b91507f416363657373436f6e74726f6c3a206163636f756e74200000000000000000006000830152601782019050919050565b6000614f70601183615659565b91507f206973206d697373696e6720726f6c65200000000000000000000000000000006000830152601182019050919050565b6000614fb0602f83615648565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b615012816157ed565b82525050565b60006150248285614686565b91506150308284614686565b91508190509392505050565b600061504782614f23565b91506150538285614686565b915061505e82614f63565b915061506a8284614686565b91508190509392505050565b600060208201905061508b60008301846145c9565b92915050565b60006060820190506150a660008301866145c9565b6150b360208301856145c9565b6150c06040830184615009565b949350505050565b60006080820190506150dd60008301876145c9565b6150ea60208301866145c9565b6150f76040830185615009565b81810360608301526151098184614605565b905095945050505050565b600060408201905061512960008301856145c9565b6151366020830184615009565b9392505050565b600060208201905061515260008301846145d8565b92915050565b600060208201905061516d60008301846145e7565b92915050565b600060208201905061518860008301846145f6565b92915050565b60006020820190506151a3600083018461463e565b92915050565b600060208201905081810360008301526151c3818461464d565b905092915050565b600060208201905081810360008301526151e4816146b7565b9050919050565b60006020820190508181036000830152615204816146f7565b9050919050565b600060208201905081810360008301526152248161475d565b9050919050565b600060208201905081810360008301526152448161479d565b9050919050565b60006020820190508181036000830152615264816147dd565b9050919050565b6000602082019050818103600083015261528481614843565b9050919050565b600060208201905081810360008301526152a4816148a9565b9050919050565b600060208201905081810360008301526152c48161490f565b9050919050565b600060208201905081810360008301526152e48161494f565b9050919050565b60006020820190508181036000830152615304816149b5565b9050919050565b6000602082019050818103600083015261532481614a1b565b9050919050565b6000602082019050818103600083015261534481614a81565b9050919050565b6000602082019050818103600083015261536481614ae7565b9050919050565b6000602082019050818103600083015261538481614b4d565b9050919050565b600060208201905081810360008301526153a481614bb3565b9050919050565b600060208201905081810360008301526153c481614c19565b9050919050565b600060208201905081810360008301526153e481614c59565b9050919050565b6000602082019050818103600083015261540481614cbf565b9050919050565b6000602082019050818103600083015261542481614d25565b9050919050565b6000602082019050818103600083015261544481614d8b565b9050919050565b6000602082019050818103600083015261546481614df1565b9050919050565b6000602082019050818103600083015261548481614e57565b9050919050565b600060208201905081810360008301526154a481614ebd565b9050919050565b600060208201905081810360008301526154c481614fa3565b9050919050565b60006020820190506154e06000830184615009565b92915050565b6000610140820190506154fc600083018d615009565b818103602083015261550e818c61464d565b90508181036040830152615522818b61464d565b9050615531606083018a6145c9565b61553e6080830189615009565b61554b60a08301886145d8565b61555860c08301876145d8565b61556560e08301866145d8565b6155736101008301856145d8565b6155816101208301846145d8565b9b9a5050505050505050505050565b6000604051905081810181811067ffffffffffffffff821117156155b7576155b66159c0565b5b8060405250919050565b600067ffffffffffffffff8211156155dc576155db6159c0565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561560c5761560b6159c0565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061566f826157ed565b915061567a836157ed565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156156af576156ae615933565b5b828201905092915050565b60006156c5826157ed565b91506156d0836157ed565b9250826156e0576156df615962565b5b828204905092915050565b60006156f6826157ed565b9150615701836157ed565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561573a57615739615933565b5b828202905092915050565b6000615750826157ed565b915061575b836157ed565b92508282101561576e5761576d615933565b5b828203905092915050565b6000615784826157cd565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061580282615809565b9050919050565b6000615814826157cd565b9050919050565b82818337600083830152505050565b60005b8381101561584857808201518184015260208101905061582d565b83811115615857576000848401525b50505050565b6000615868826157ed565b9150600082141561587c5761587b615933565b5b600182039050919050565b6000600282049050600182168061589f57607f821691505b602082108114156158b3576158b2615991565b5b50919050565b60006158c4826157ed565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156158f7576158f6615933565b5b600182019050919050565b600061590d826157ed565b9150615918836157ed565b92508261592857615927615962565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b615a0981615779565b8114615a1457600080fd5b50565b615a208161578b565b8114615a2b57600080fd5b50565b615a3781615797565b8114615a4257600080fd5b50565b615a4e816157a1565b8114615a5957600080fd5b50565b615a65816157ed565b8114615a7057600080fd5b5056fea2646970667358221220e417601559b20f5ff9ac329b92805c7ad085077664fe7e7422aa17af21009d8364736f6c63430008000033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "397:4382:2:-:0;;;1188:260;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1321:114:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:5;1388;:13;;;;;;;;;;;;:::i;:::-;;1421:7;1411;:17;;;;;;;;;;;;:::i;:::-;;1321:114;;1287:1:2::1;1272:12;:16;;;;1309:13;1298:8;;:24;;;;;;;;;;;;;;;;;;1350:5;1332:15;;:23;;;;;;;;;;;;;;;;;;1365:44;2439:4:9;1376:18:2::0;::::1;1396:12;:10;;;:12;;:::i;:::-;1365:10;;;:44;;:::i;:::-;1431:10;1419:9;;:22;;;;;;;;;;;;;;;;;;1188:260:::0;;397:4382;;586:96:16;639:7;665:10;658:17;;586:96;:::o;7515:110:9:-;7593:25;7604:4;7610:7;7593:10;;;:25;;:::i;:::-;7515:110;;:::o;7948:224::-;8022:22;8030:4;8036:7;8022;;;:22;;:::i;:::-;8017:149;;8092:4;8060:6;:12;8067:4;8060:12;;;;;;;;;;;:20;;:29;8081:7;8060:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;8142:12;:10;;;:12;;:::i;:::-;8115:40;;8133:7;8115:40;;8127:4;8115:40;;;;;;;;;;8017:149;7948:224;;:::o;4374:137::-;4452:4;4475:6;:12;4482:4;4475:12;;;;;;;;;;;:20;;:29;4496:7;4475:29;;;;;;;;;;;;;;;;;;;;;;;;;4468:36;;4374:137;;;;:::o;397:4382:2:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:173:21:-;;110:6;104:13;95:22;;126:48;168:5;126:48;:::i;:::-;85:95;;;;:::o;186:500::-;;;352:2;340:9;331:7;327:23;323:32;320:2;;;368:1;365;358:12;320:2;411:1;436:79;507:7;498:6;487:9;483:22;436:79;:::i;:::-;426:89;;382:143;564:2;590:79;661:7;652:6;641:9;637:22;590:79;:::i;:::-;580:89;;535:144;310:376;;;;;:::o;692:96::-;;758:24;776:5;758:24;:::i;:::-;747:35;;737:51;;;:::o;794:111::-;;875:24;893:5;875:24;:::i;:::-;864:35;;854:51;;;:::o;911:126::-;;988:42;981:5;977:54;966:65;;956:81;;;:::o;1043:320::-;;1124:1;1118:4;1114:12;1104:22;;1171:1;1165:4;1161:12;1192:18;1182:2;;1248:4;1240:6;1236:17;1226:27;;1182:2;1310;1302:6;1299:14;1279:18;1276:38;1273:2;;;1329:18;;:::i;:::-;1273:2;1094:269;;;;:::o;1369:180::-;1417:77;1414:1;1407:88;1514:4;1511:1;1504:15;1538:4;1535:1;1528:15;1555:152;1643:39;1676:5;1643:39;:::i;:::-;1636:5;1633:50;1623:2;;1697:1;1694;1687:12;1623:2;1613:94;:::o;397:4382:2:-;;;;;;;",
  "deployedSourceMap": "397:4382:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4603:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2408:98:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3820:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3371:388;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4435:162:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4684:300:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5348:121:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;920:39:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5719:145:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6736:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5050:149:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1454:609:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2069:277;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2111:235:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;608:24:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1849:205:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3598:516:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4374:137:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2570:102:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2394:49:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4104:290:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4138:291:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;544:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5265:282:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;388:663:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2352:534:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;511:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6098:147:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;579:22:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2892:675;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4460:162:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;965:42:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4603:174;4711:4;4734:36;4758:11;4734:23;:36::i;:::-;4727:43;;4603:174;;;:::o;2408:98:10:-;2462:13;2494:5;2487:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2408:98;:::o;3820:217::-;3896:7;3923:16;3931:7;3923;:16::i;:::-;3915:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4006:15;:24;4022:7;4006:24;;;;;;;;;;;;;;;;;;;;;3999:31;;3820:217;;;:::o;3371:388::-;3451:13;3467:23;3482:7;3467:14;:23::i;:::-;3451:39;;3514:5;3508:11;;:2;:11;;;;3500:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3592:5;3576:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3601:37;3618:5;3625:12;:10;:12::i;:::-;3601:16;:37::i;:::-;3576:62;3568:152;;;;;;;;;;;;:::i;:::-;;;;;;;;;3731:21;3740:2;3744:7;3731:8;:21::i;:::-;3371:388;;;:::o;4435:162:2:-;4535:6;4560:30;;;4553:37;;4435:162;;;;;;:::o;4684:300:10:-;4843:41;4862:12;:10;:12::i;:::-;4876:7;4843:18;:41::i;:::-;4835:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;4949:28;4959:4;4965:2;4969:7;4949:9;:28::i;:::-;4684:300;;;:::o;5348:121:9:-;5414:7;5440:6;:12;5447:4;5440:12;;;;;;;;;;;:22;;;5433:29;;5348:121;;;:::o;920:39:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5719:145:9:-;5802:18;5815:4;5802:12;:18::i;:::-;3958:30;3969:4;3975:12;:10;:12::i;:::-;3958:10;:30::i;:::-;5832:25:::1;5843:4;5849:7;5832:10;:25::i;:::-;5719:145:::0;;;:::o;6736:214::-;6842:12;:10;:12::i;:::-;6831:23;;:7;:23;;;6823:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6917:26;6929:4;6935:7;6917:11;:26::i;:::-;6736:214;;:::o;5050:149:10:-;5153:39;5170:4;5176:2;5180:7;5153:39;;;;;;;;;;;;:16;:39::i;:::-;5050:149;;;:::o;1454:609:2:-;1595:7;1644:1;1629:12;;:16;;;;:::i;:::-;1614:12;:31;;;;1655:17;1675:12;;1655:32;;1698;1708:10;1720:9;1698;:32::i;:::-;1740:33;1753:9;1764:8;1740:12;:33::i;:::-;1802:227;;;;;;;;1823:9;1802:227;;;;1846:5;1802:227;;;;1865:8;1802:227;;;;1887:10;1802:227;;;;;;1911:13;1802:227;;;;1938:5;1802:227;;;;;;1957:5;1802:227;;;;;;1976:5;1802:227;;;;;;1995:5;1802:227;;;;;;2014:5;1802:227;;;;;1784:4;:15;1789:9;1784:15;;;;;;;;;;;:245;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2047:9;2040:16;;;1454:609;;;;;:::o;2069:277::-;2154:23;2180:4;:16;2185:10;2180:16;;;;;;;;;;;2154:42;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2227:4;2206:8;:18;;:25;;;;;;;;;;;2260:8;2241:4;:16;2246:10;2241:16;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2279:60;2296:10;2316:9;;;;;;;;;;;2328:10;2279:16;:60::i;:::-;2069:277;;:::o;2111:235:10:-;2183:7;2202:13;2218:7;:16;2226:7;2218:16;;;;;;;;;;;;;;;;;;;;;2202:32;;2269:1;2252:19;;:5;:19;;;;2244:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2334:5;2327:12;;;2111:235;;;:::o;608:24:2:-;;;;;;;;;;;;;:::o;1849:205:10:-;1921:7;1965:1;1948:19;;:5;:19;;;;1940:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2031:9;:16;2041:5;2031:16;;;;;;;;;;;;;;;;2024:23;;1849:205;;;:::o;3598:516:2:-;3675:23;3701:4;:16;3706:10;3701:16;;;;;;;;;;;3675:42;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3753:7;3735:8;:14;;;:25;;3727:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;3835:8;:22;;;3834:23;3826:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3949:4;3924:8;:22;;:29;;;;;;;;;;;3991:4;3963:8;:25;;:32;;;;;;;;;;;4024:8;4005:4;:16;4010:10;4005:16;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4043:8;;;;;;;;;;;:21;;;4065:10;4085:4;4092:8;:14;;;4043:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3598:516;;;:::o;4374:137:9:-;4452:4;4475:6;:12;4482:4;4475:12;;;;;;;;;;;:20;;:29;4496:7;4475:29;;;;;;;;;;;;;;;;;;;;;;;;;4468:36;;4374:137;;;;:::o;2570:102:10:-;2626:13;2658:7;2651:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2570:102;:::o;2394:49:9:-;2439:4;2394:49;;;:::o;4104:290:10:-;4218:12;:10;:12::i;:::-;4206:24;;:8;:24;;;;4198:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4316:8;4271:18;:32;4290:12;:10;:12::i;:::-;4271:32;;;;;;;;;;;;;;;:42;4304:8;4271:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4368:8;4339:48;;4354:12;:10;:12::i;:::-;4339:48;;;4378:8;4339:48;;;;;;:::i;:::-;;;;;;;;4104:290;;:::o;4138:291:2:-;1066:41;2439:4:9;1074:18:2;;1094:12;:10;:12::i;:::-;1066:7;:41::i;:::-;1045:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;4232:23:::1;4258:4;:16;4263:10;4258:16;;;;;;;;;;;4232:42;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;4305:5;4284:8;:18;;:26;;;;;;;;;::::0;::::1;4339:8;4320:4;:16;4325:10;4320:16;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4358:64;4383:9;;;;;;;;;;;4395:8;:14;;;4411:10;4358:16;:64::i;:::-;1174:1;4138:291:::0;:::o;544:29::-;;;;;;;;;;;;;:::o;5265:282:10:-;5396:41;5415:12;:10;:12::i;:::-;5429:7;5396:18;:41::i;:::-;5388:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5501:39;5515:4;5521:2;5525:7;5534:5;5501:13;:39::i;:::-;5265:282;;;;:::o;388:663:13:-;461:13;494:16;502:7;494;:16::i;:::-;486:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;575:23;601:10;:19;612:7;601:19;;;;;;;;;;;575:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;630:18;651:10;:8;:10::i;:::-;630:31;;756:1;740:4;734:18;:23;730:70;;;780:9;773:16;;;;;;730:70;928:1;908:9;902:23;:27;898:106;;;976:4;982:9;959:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;945:48;;;;;;898:106;1021:23;1036:7;1021:14;:23::i;:::-;1014:30;;;;388:663;;;;:::o;2352:534:2:-;1066:41;2439:4:9;1074:18:2;;1094:12;:10;:12::i;:::-;1066:7;:41::i;:::-;1045:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;2472:23:::1;2498:4;:16;2503:10;2498:16;;;;;;;;;;;2472:42;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2548:11;2524:8;:21;;:35;;;;;;;;;::::0;::::1;2582:11;2578:264;;;2630:4;2609:8;:18;;:25;;;;;;;;;::::0;::::1;2648:8;;;;;;;;;;;:16;;;2665:8;:14;;;2681:8;:14;;;2648:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2578:264;;;2748:5;2727:8;:18;;:26;;;;;;;;;::::0;::::1;2767:64;2792:9;;;;;;;;;;;2804:8;:14;;;2820:10;2767:16;:64::i;:::-;2578:264;2871:8;2852:4;:16;2857:10;2852:16;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1174:1;2352:534:::0;;:::o;511:27::-;;;;:::o;6098:147:9:-;6182:18;6195:4;6182:12;:18::i;:::-;3958:30;3969:4;3975:12;:10;:12::i;:::-;3958:10;:30::i;:::-;6212:26:::1;6224:4;6230:7;6212:11;:26::i;:::-;6098:147:::0;;;:::o;579:22:2:-;;;;;;;;;;;;;:::o;2892:675::-;2975:23;3001:4;:16;3006:10;3001:16;;;;;;;;;;;2975:42;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3084:8;:14;;;3044:15;;;;;;;;;;;:25;;;3070:10;3044:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;3036:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;3168:8;:21;;;3160:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;3270:8;:25;;;3269:26;3261:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3382:4;3354:8;:25;;:32;;;;;;;;;;;3415:8;3396:4;:16;3401:10;3396:16;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3434:15;;;;;;;;;;;:28;;;3463:10;3483:4;3490:8;:14;;;3434:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3515:8;;;;;;;;;;;:17;;;3533:10;3545:8;:14;;;3515:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2892:675;;:::o;4460:162:10:-;4557:4;4580:18;:25;4599:5;4580:25;;;;;;;;;;;;;;;:35;4606:8;4580:35;;;;;;;;;;;;;;;;;;;;;;;;;4573:42;;4460:162;;;;:::o;965:42:2:-;;;;;;;;;;;;;;;;;:::o;4073:214:9:-;4158:4;4196:32;4181:47;;;:11;:47;;;;:99;;;;4244:36;4268:11;4244:23;:36::i;:::-;4181:99;4174:106;;4073:214;;;:::o;6981:125:10:-;7046:4;7097:1;7069:30;;:7;:16;7077:7;7069:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7062:37;;6981:125;;;:::o;586:96:16:-;639:7;665:10;658:17;;586:96;:::o;10738:171:10:-;10839:2;10812:15;:24;10828:7;10812:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;10894:7;10890:2;10856:46;;10865:23;10880:7;10865:14;:23::i;:::-;10856:46;;;;;;;;;;;;10738:171;;:::o;7264:344::-;7357:4;7381:16;7389:7;7381;:16::i;:::-;7373:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7456:13;7472:23;7487:7;7472:14;:23::i;:::-;7456:39;;7524:5;7513:16;;:7;:16;;;:51;;;;7557:7;7533:31;;:20;7545:7;7533:11;:20::i;:::-;:31;;;7513:51;:87;;;;7568:32;7585:5;7592:7;7568:16;:32::i;:::-;7513:87;7505:96;;;7264:344;;;;:::o;10097:530::-;10221:4;10194:31;;:23;10209:7;10194:14;:23::i;:::-;:31;;;10186:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;10303:1;10289:16;;:2;:16;;;;10281:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10357:39;10378:4;10384:2;10388:7;10357:20;:39::i;:::-;10458:29;10475:1;10479:7;10458:8;:29::i;:::-;10517:1;10498:9;:15;10508:4;10498:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10545:1;10528:9;:13;10538:2;10528:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10575:2;10556:7;:16;10564:7;10556:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10612:7;10608:2;10593:27;;10602:4;10593:27;;;;;;;;;;;;10097:530;;;:::o;4792:375:9:-;4871:22;4879:4;4885:7;4871;:22::i;:::-;4867:294;;5000:41;5028:7;5000:41;;5038:2;5000:19;:41::i;:::-;5096:38;5124:4;5116:13;;5131:2;5096:19;:38::i;:::-;4923:225;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4909:241;;;;;;;;;;;:::i;:::-;;;;;;;;4867:294;4792:375;;:::o;7948:224::-;8022:22;8030:4;8036:7;8022;:22::i;:::-;8017:149;;8092:4;8060:6;:12;8067:4;8060:12;;;;;;;;;;;:20;;:29;8081:7;8060:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;8142:12;:10;:12::i;:::-;8115:40;;8133:7;8115:40;;8127:4;8115:40;;;;;;;;;;8017:149;7948:224;;:::o;8178:225::-;8252:22;8260:4;8266:7;8252;:22::i;:::-;8248:149;;;8322:5;8290:6;:12;8297:4;8290:12;;;;;;;;;;;:20;;:29;8311:7;8290:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8373:12;:10;:12::i;:::-;8346:40;;8364:7;8346:40;;8358:4;8346:40;;;;;;;;;;8248:149;8178:225;;:::o;7938:108:10:-;8013:26;8023:2;8027:7;8013:26;;;;;;;;;;;;:9;:26::i;:::-;7938:108;;:::o;1198:214:13:-;1297:16;1305:7;1297;:16::i;:::-;1289:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1396:9;1374:10;:19;1385:7;1374:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1198:214;;:::o;6409:269:10:-;6522:28;6532:4;6538:2;6542:7;6522:9;:28::i;:::-;6568:48;6591:4;6597:2;6601:7;6610:5;6568:22;:48::i;:::-;6560:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;6409:269;;;;:::o;3222:92::-;3273:13;3298:9;;;;;;;;;;;;;;3222:92;:::o;2738:353::-;2811:13;2844:16;2852:7;2844;:16::i;:::-;2836:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2923:21;2947:10;:8;:10::i;:::-;2923:34;;2998:1;2980:7;2974:21;:25;:110;;;;;;;;;;;;;;;;;3038:7;3047:18;:7;:16;:18::i;:::-;3021:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2974:110;2967:117;;;2738:353;;;:::o;1502:288::-;1604:4;1642:25;1627:40;;;:11;:40;;;;:104;;;;1698:33;1683:48;;;:11;:48;;;;1627:104;:156;;;;1747:36;1771:11;1747:23;:36::i;:::-;1627:156;1620:163;;1502:288;;;:::o;12882:93::-;;;;:::o;1531:437:18:-;1606:13;1631:19;1676:1;1667:6;1663:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1653:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1631:47;;1688:15;:6;1695:1;1688:9;;;;;;;;;;;;;;;;;;;:15;;;;;;;;;;;1713;:6;1720:1;1713:9;;;;;;;;;;;;;;;;;;;:15;;;;;;;;;;;1743:9;1768:1;1759:6;1755:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1743:26;;1738:128;1775:1;1771;:5;1738:128;;;1809:8;1826:3;1818:5;:11;1809:21;;;;;;;;;;;;;;;;;;1797:6;1804:1;1797:9;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;1854:1;1844:11;;;;;1778:3;;;;:::i;:::-;;;1738:128;;;;1892:1;1883:5;:10;1875:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1954:6;1940:21;;;1531:437;;;;:::o;8267:247:10:-;8362:18;8368:2;8372:7;8362:5;:18::i;:::-;8398:54;8429:1;8433:2;8437:7;8446:5;8398:22;:54::i;:::-;8390:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;8267:247;;;:::o;11462:824::-;11582:4;11606:15;:2;:13;;;:15::i;:::-;11602:678;;;11657:2;11641:36;;;11678:12;:10;:12::i;:::-;11692:4;11698:7;11707:5;11641:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;11637:591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11901:1;11884:6;:13;:18;11880:334;;;11926:60;;;;;;;;;;:::i;:::-;;;;;;;;11880:334;12166:6;12160:13;12151:6;12147:2;12143:15;12136:38;11637:591;11773:45;;;11763:55;;;:6;:55;;;;11756:62;;;;;11602:678;12265:4;12258:11;;11462:824;;;;;;;:::o;271:703:18:-;327:13;553:1;544:5;:10;540:51;;;570:10;;;;;;;;;;;;;;;;;;;;;540:51;600:12;615:5;600:20;;630:14;654:75;669:1;661:4;:9;654:75;;686:8;;;;;:::i;:::-;;;;716:2;708:10;;;;;:::i;:::-;;;654:75;;;738:19;770:6;760:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;738:39;;787:150;803:1;794:5;:10;787:150;;830:1;820:11;;;;;:::i;:::-;;;896:2;888:5;:10;;;;:::i;:::-;875:2;:24;;;;:::i;:::-;862:39;;845:6;852;845:14;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;924:2;915:11;;;;;:::i;:::-;;;787:150;;;960:6;946:21;;;;;271:703;;;;:::o;763:155:19:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;8836:372:10:-;8929:1;8915:16;;:2;:16;;;;8907:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;8987:16;8995:7;8987;:16::i;:::-;8986:17;8978:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9047:45;9076:1;9080:2;9084:7;9047:20;:45::i;:::-;9120:1;9103:9;:13;9113:2;9103:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9150:2;9131:7;:16;9139:7;9131:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9193:7;9189:2;9168:33;;9185:1;9168:33;;;;;;;;;;;;8836:372;;:::o;718:413:15:-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:342:21:-;;109:64;124:48;165:6;124:48;:::i;:::-;109:64;:::i;:::-;100:73;;196:6;189:5;182:21;234:4;227:5;223:16;272:3;263:6;258:3;254:16;251:25;248:2;;;289:1;286;279:12;248:2;302:41;336:6;331:3;326;302:41;:::i;:::-;90:259;;;;;;:::o;355:344::-;;458:65;473:49;515:6;473:49;:::i;:::-;458:65;:::i;:::-;449:74;;546:6;539:5;532:21;584:4;577:5;573:16;622:3;613:6;608:3;604:16;601:25;598:2;;;639:1;636;629:12;598:2;652:41;686:6;681:3;676;652:41;:::i;:::-;439:260;;;;;;:::o;705:139::-;;789:6;776:20;767:29;;805:33;832:5;805:33;:::i;:::-;757:87;;;;:::o;850:133::-;;931:6;918:20;909:29;;947:30;971:5;947:30;:::i;:::-;899:84;;;;:::o;989:137::-;;1074:6;1068:13;1059:22;;1090:30;1114:5;1090:30;:::i;:::-;1049:77;;;;:::o;1132:139::-;;1216:6;1203:20;1194:29;;1232:33;1259:5;1232:33;:::i;:::-;1184:87;;;;:::o;1277:137::-;;1360:6;1347:20;1338:29;;1376:32;1402:5;1376:32;:::i;:::-;1328:86;;;;:::o;1420:141::-;;1507:6;1501:13;1492:22;;1523:32;1549:5;1523:32;:::i;:::-;1482:79;;;;:::o;1580:271::-;;1684:3;1677:4;1669:6;1665:17;1661:27;1651:2;;1702:1;1699;1692:12;1651:2;1742:6;1729:20;1767:78;1841:3;1833:6;1826:4;1818:6;1814:17;1767:78;:::i;:::-;1758:87;;1641:210;;;;;:::o;1871:273::-;;1976:3;1969:4;1961:6;1957:17;1953:27;1943:2;;1994:1;1991;1984:12;1943:2;2034:6;2021:20;2059:79;2134:3;2126:6;2119:4;2111:6;2107:17;2059:79;:::i;:::-;2050:88;;1933:211;;;;;:::o;2150:139::-;;2234:6;2221:20;2212:29;;2250:33;2277:5;2250:33;:::i;:::-;2202:87;;;;:::o;2295:143::-;;2383:6;2377:13;2368:22;;2399:33;2426:5;2399:33;:::i;:::-;2358:80;;;;:::o;2444:262::-;;2552:2;2540:9;2531:7;2527:23;2523:32;2520:2;;;2568:1;2565;2558:12;2520:2;2611:1;2636:53;2681:7;2672:6;2661:9;2657:22;2636:53;:::i;:::-;2626:63;;2582:117;2510:196;;;;:::o;2712:407::-;;;2837:2;2825:9;2816:7;2812:23;2808:32;2805:2;;;2853:1;2850;2843:12;2805:2;2896:1;2921:53;2966:7;2957:6;2946:9;2942:22;2921:53;:::i;:::-;2911:63;;2867:117;3023:2;3049:53;3094:7;3085:6;3074:9;3070:22;3049:53;:::i;:::-;3039:63;;2994:118;2795:324;;;;;:::o;3125:552::-;;;;3267:2;3255:9;3246:7;3242:23;3238:32;3235:2;;;3283:1;3280;3273:12;3235:2;3326:1;3351:53;3396:7;3387:6;3376:9;3372:22;3351:53;:::i;:::-;3341:63;;3297:117;3453:2;3479:53;3524:7;3515:6;3504:9;3500:22;3479:53;:::i;:::-;3469:63;;3424:118;3581:2;3607:53;3652:7;3643:6;3632:9;3628:22;3607:53;:::i;:::-;3597:63;;3552:118;3225:452;;;;;:::o;3683:809::-;;;;;3851:3;3839:9;3830:7;3826:23;3822:33;3819:2;;;3868:1;3865;3858:12;3819:2;3911:1;3936:53;3981:7;3972:6;3961:9;3957:22;3936:53;:::i;:::-;3926:63;;3882:117;4038:2;4064:53;4109:7;4100:6;4089:9;4085:22;4064:53;:::i;:::-;4054:63;;4009:118;4166:2;4192:53;4237:7;4228:6;4217:9;4213:22;4192:53;:::i;:::-;4182:63;;4137:118;4322:2;4311:9;4307:18;4294:32;4353:18;4345:6;4342:30;4339:2;;;4385:1;4382;4375:12;4339:2;4413:62;4467:7;4458:6;4447:9;4443:22;4413:62;:::i;:::-;4403:72;;4265:220;3809:683;;;;;;;:::o;4498:401::-;;;4620:2;4608:9;4599:7;4595:23;4591:32;4588:2;;;4636:1;4633;4626:12;4588:2;4679:1;4704:53;4749:7;4740:6;4729:9;4725:22;4704:53;:::i;:::-;4694:63;;4650:117;4806:2;4832:50;4874:7;4865:6;4854:9;4850:22;4832:50;:::i;:::-;4822:60;;4777:115;4578:321;;;;;:::o;4905:407::-;;;5030:2;5018:9;5009:7;5005:23;5001:32;4998:2;;;5046:1;5043;5036:12;4998:2;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;5216:2;5242:53;5287:7;5278:6;5267:9;5263:22;5242:53;:::i;:::-;5232:63;;5187:118;4988:324;;;;;:::o;5318:278::-;;5434:2;5422:9;5413:7;5409:23;5405:32;5402:2;;;5450:1;5447;5440:12;5402:2;5493:1;5518:61;5571:7;5562:6;5551:9;5547:22;5518:61;:::i;:::-;5508:71;;5464:125;5392:204;;;;:::o;5602:262::-;;5710:2;5698:9;5689:7;5685:23;5681:32;5678:2;;;5726:1;5723;5716:12;5678:2;5769:1;5794:53;5839:7;5830:6;5819:9;5815:22;5794:53;:::i;:::-;5784:63;;5740:117;5668:196;;;;:::o;5870:407::-;;;5995:2;5983:9;5974:7;5970:23;5966:32;5963:2;;;6011:1;6008;6001:12;5963:2;6054:1;6079:53;6124:7;6115:6;6104:9;6100:22;6079:53;:::i;:::-;6069:63;;6025:117;6181:2;6207:53;6252:7;6243:6;6232:9;6228:22;6207:53;:::i;:::-;6197:63;;6152:118;5953:324;;;;;:::o;6283:260::-;;6390:2;6378:9;6369:7;6365:23;6361:32;6358:2;;;6406:1;6403;6396:12;6358:2;6449:1;6474:52;6518:7;6509:6;6498:9;6494:22;6474:52;:::i;:::-;6464:62;;6420:116;6348:195;;;;:::o;6549:282::-;;6667:2;6655:9;6646:7;6642:23;6638:32;6635:2;;;6683:1;6680;6673:12;6635:2;6726:1;6751:63;6806:7;6797:6;6786:9;6782:22;6751:63;:::i;:::-;6741:73;;6697:127;6625:206;;;;:::o;6837:778::-;;;;6999:2;6987:9;6978:7;6974:23;6970:32;6967:2;;;7015:1;7012;7005:12;6967:2;7086:1;7075:9;7071:17;7058:31;7116:18;7108:6;7105:30;7102:2;;;7148:1;7145;7138:12;7102:2;7176:63;7231:7;7222:6;7211:9;7207:22;7176:63;:::i;:::-;7166:73;;7029:220;7288:2;7314:53;7359:7;7350:6;7339:9;7335:22;7314:53;:::i;:::-;7304:63;;7259:118;7444:2;7433:9;7429:18;7416:32;7475:18;7467:6;7464:30;7461:2;;;7507:1;7504;7497:12;7461:2;7535:63;7590:7;7581:6;7570:9;7566:22;7535:63;:::i;:::-;7525:73;;7387:221;6957:658;;;;;:::o;7621:262::-;;7729:2;7717:9;7708:7;7704:23;7700:32;7697:2;;;7745:1;7742;7735:12;7697:2;7788:1;7813:53;7858:7;7849:6;7838:9;7834:22;7813:53;:::i;:::-;7803:63;;7759:117;7687:196;;;;:::o;7889:284::-;;8008:2;7996:9;7987:7;7983:23;7979:32;7976:2;;;8024:1;8021;8014:12;7976:2;8067:1;8092:64;8148:7;8139:6;8128:9;8124:22;8092:64;:::i;:::-;8082:74;;8038:128;7966:207;;;;:::o;8179:401::-;;;8301:2;8289:9;8280:7;8276:23;8272:32;8269:2;;;8317:1;8314;8307:12;8269:2;8360:1;8385:53;8430:7;8421:6;8410:9;8406:22;8385:53;:::i;:::-;8375:63;;8331:117;8487:2;8513:50;8555:7;8546:6;8535:9;8531:22;8513:50;:::i;:::-;8503:60;;8458:115;8259:321;;;;;:::o;8586:407::-;;;8711:2;8699:9;8690:7;8686:23;8682:32;8679:2;;;8727:1;8724;8717:12;8679:2;8770:1;8795:53;8840:7;8831:6;8820:9;8816:22;8795:53;:::i;:::-;8785:63;;8741:117;8897:2;8923:53;8968:7;8959:6;8948:9;8944:22;8923:53;:::i;:::-;8913:63;;8868:118;8669:324;;;;;:::o;8999:118::-;9086:24;9104:5;9086:24;:::i;:::-;9081:3;9074:37;9064:53;;:::o;9123:109::-;9204:21;9219:5;9204:21;:::i;:::-;9199:3;9192:34;9182:50;;:::o;9238:118::-;9325:24;9343:5;9325:24;:::i;:::-;9320:3;9313:37;9303:53;;:::o;9362:115::-;9447:23;9464:5;9447:23;:::i;:::-;9442:3;9435:36;9425:52;;:::o;9483:360::-;;9597:38;9629:5;9597:38;:::i;:::-;9651:70;9714:6;9709:3;9651:70;:::i;:::-;9644:77;;9730:52;9775:6;9770:3;9763:4;9756:5;9752:16;9730:52;:::i;:::-;9807:29;9829:6;9807:29;:::i;:::-;9802:3;9798:39;9791:46;;9573:270;;;;;:::o;9849:161::-;9951:52;9997:5;9951:52;:::i;:::-;9946:3;9939:65;9929:81;;:::o;10016:364::-;;10132:39;10165:5;10132:39;:::i;:::-;10187:71;10251:6;10246:3;10187:71;:::i;:::-;10180:78;;10267:52;10312:6;10307:3;10300:4;10293:5;10289:16;10267:52;:::i;:::-;10344:29;10366:6;10344:29;:::i;:::-;10339:3;10335:39;10328:46;;10108:272;;;;;:::o;10386:377::-;;10520:39;10553:5;10520:39;:::i;:::-;10575:89;10657:6;10652:3;10575:89;:::i;:::-;10568:96;;10673:52;10718:6;10713:3;10706:4;10699:5;10695:16;10673:52;:::i;:::-;10750:6;10745:3;10741:16;10734:23;;10496:267;;;;;:::o;10769:330::-;;10932:67;10996:2;10991:3;10932:67;:::i;:::-;10925:74;;11029:34;11025:1;11020:3;11016:11;11009:55;11090:2;11085:3;11081:12;11074:19;;10915:184;;;:::o;11105:382::-;;11268:67;11332:2;11327:3;11268:67;:::i;:::-;11261:74;;11365:34;11361:1;11356:3;11352:11;11345:55;11431:20;11426:2;11421:3;11417:12;11410:42;11478:2;11473:3;11469:12;11462:19;;11251:236;;;:::o;11493:326::-;;11656:67;11720:2;11715:3;11656:67;:::i;:::-;11649:74;;11753:30;11749:1;11744:3;11740:11;11733:51;11810:2;11805:3;11801:12;11794:19;;11639:180;;;:::o;11825:329::-;;11988:67;12052:2;12047:3;11988:67;:::i;:::-;11981:74;;12085:33;12081:1;12076:3;12072:11;12065:54;12145:2;12140:3;12136:12;12129:19;;11971:183;;;:::o;12160:389::-;;12323:67;12387:2;12382:3;12323:67;:::i;:::-;12316:74;;12420:34;12416:1;12411:3;12407:11;12400:55;12486:27;12481:2;12476:3;12472:12;12465:49;12540:2;12535:3;12531:12;12524:19;;12306:243;;;:::o;12555:383::-;;12718:67;12782:2;12777:3;12718:67;:::i;:::-;12711:74;;12815:34;12811:1;12806:3;12802:11;12795:55;12881:21;12876:2;12871:3;12867:12;12860:43;12929:2;12924:3;12920:12;12913:19;;12701:237;;;:::o;12944:368::-;;13107:67;13171:2;13166:3;13107:67;:::i;:::-;13100:74;;13204:34;13200:1;13195:3;13191:11;13184:55;13270:6;13265:2;13260:3;13256:12;13249:28;13303:2;13298:3;13294:12;13287:19;;13090:222;;;:::o;13318:323::-;;13481:67;13545:2;13540:3;13481:67;:::i;:::-;13474:74;;13578:27;13574:1;13569:3;13565:11;13558:48;13632:2;13627:3;13623:12;13616:19;;13464:177;;;:::o;13647:376::-;;13810:67;13874:2;13869:3;13810:67;:::i;:::-;13803:74;;13907:34;13903:1;13898:3;13894:11;13887:55;13973:14;13968:2;13963:3;13959:12;13952:36;14014:2;14009:3;14005:12;13998:19;;13793:230;;;:::o;14029:388::-;;14192:67;14256:2;14251:3;14192:67;:::i;:::-;14185:74;;14289:34;14285:1;14280:3;14276:11;14269:55;14355:26;14350:2;14345:3;14341:12;14334:48;14408:2;14403:3;14399:12;14392:19;;14175:242;;;:::o;14423:374::-;;14586:67;14650:2;14645:3;14586:67;:::i;:::-;14579:74;;14683:34;14679:1;14674:3;14670:11;14663:55;14749:12;14744:2;14739:3;14735:12;14728:34;14788:2;14783:3;14779:12;14772:19;;14569:228;;;:::o;14803:373::-;;14966:67;15030:2;15025:3;14966:67;:::i;:::-;14959:74;;15063:34;15059:1;15054:3;15050:11;15043:55;15129:11;15124:2;15119:3;15115:12;15108:33;15167:2;15162:3;15158:12;15151:19;;14949:227;;;:::o;15182:378::-;;15345:67;15409:2;15404:3;15345:67;:::i;:::-;15338:74;;15442:34;15438:1;15433:3;15429:11;15422:55;15508:16;15503:2;15498:3;15494:12;15487:38;15551:2;15546:3;15542:12;15535:19;;15328:232;;;:::o;15566:375::-;;15729:67;15793:2;15788:3;15729:67;:::i;:::-;15722:74;;15826:34;15822:1;15817:3;15813:11;15806:55;15892:13;15887:2;15882:3;15878:12;15871:35;15932:2;15927:3;15923:12;15916:19;;15712:229;;;:::o;15947:379::-;;16110:67;16174:2;16169:3;16110:67;:::i;:::-;16103:74;;16207:34;16203:1;16198:3;16194:11;16187:55;16273:17;16268:2;16263:3;16259:12;16252:39;16317:2;16312:3;16308:12;16301:19;;16093:233;;;:::o;16332:330::-;;16495:67;16559:2;16554:3;16495:67;:::i;:::-;16488:74;;16592:34;16588:1;16583:3;16579:11;16572:55;16653:2;16648:3;16644:12;16637:19;;16478:184;;;:::o;16668:381::-;;16831:67;16895:2;16890:3;16831:67;:::i;:::-;16824:74;;16928:34;16924:1;16919:3;16915:11;16908:55;16994:19;16989:2;16984:3;16980:12;16973:41;17040:2;17035:3;17031:12;17024:19;;16814:235;;;:::o;17055:376::-;;17218:67;17282:2;17277:3;17218:67;:::i;:::-;17211:74;;17315:34;17311:1;17306:3;17302:11;17295:55;17381:14;17376:2;17371:3;17367:12;17360:36;17422:2;17417:3;17413:12;17406:19;;17201:230;;;:::o;17437:373::-;;17600:67;17664:2;17659:3;17600:67;:::i;:::-;17593:74;;17697:34;17693:1;17688:3;17684:11;17677:55;17763:11;17758:2;17753:3;17749:12;17742:33;17801:2;17796:3;17792:12;17785:19;;17583:227;;;:::o;17816:379::-;;17979:67;18043:2;18038:3;17979:67;:::i;:::-;17972:74;;18076:34;18072:1;18067:3;18063:11;18056:55;18142:17;18137:2;18132:3;18128:12;18121:39;18186:2;18181:3;18177:12;18170:19;;17962:233;;;:::o;18201:365::-;;18364:67;18428:2;18423:3;18364:67;:::i;:::-;18357:74;;18461:34;18457:1;18452:3;18448:11;18441:55;18527:3;18522:2;18517:3;18513:12;18506:25;18557:2;18552:3;18548:12;18541:19;;18347:219;;;:::o;18572:375::-;;18735:67;18799:2;18794:3;18735:67;:::i;:::-;18728:74;;18832:34;18828:1;18823:3;18819:11;18812:55;18898:13;18893:2;18888:3;18884:12;18877:35;18938:2;18933:3;18929:12;18922:19;;18718:229;;;:::o;18953:381::-;;19116:67;19180:2;19175:3;19116:67;:::i;:::-;19109:74;;19213:34;19209:1;19204:3;19200:11;19193:55;19279:19;19274:2;19269:3;19265:12;19258:41;19325:2;19320:3;19316:12;19309:19;;19099:235;;;:::o;19340:357::-;;19521:85;19603:2;19598:3;19521:85;:::i;:::-;19514:92;;19636:25;19632:1;19627:3;19623:11;19616:46;19688:2;19683:3;19679:12;19672:19;;19504:193;;;:::o;19703:351::-;;19884:85;19966:2;19961:3;19884:85;:::i;:::-;19877:92;;19999:19;19995:1;19990:3;19986:11;19979:40;20045:2;20040:3;20036:12;20029:19;;19867:187;;;:::o;20060:379::-;;20223:67;20287:2;20282:3;20223:67;:::i;:::-;20216:74;;20320:34;20316:1;20311:3;20307:11;20300:55;20386:17;20381:2;20376:3;20372:12;20365:39;20430:2;20425:3;20421:12;20414:19;;20206:233;;;:::o;20445:118::-;20532:24;20550:5;20532:24;:::i;:::-;20527:3;20520:37;20510:53;;:::o;20569:435::-;;20771:95;20862:3;20853:6;20771:95;:::i;:::-;20764:102;;20883:95;20974:3;20965:6;20883:95;:::i;:::-;20876:102;;20995:3;20988:10;;20753:251;;;;;:::o;21010:967::-;;21414:148;21558:3;21414:148;:::i;:::-;21407:155;;21579:95;21670:3;21661:6;21579:95;:::i;:::-;21572:102;;21691:148;21835:3;21691:148;:::i;:::-;21684:155;;21856:95;21947:3;21938:6;21856:95;:::i;:::-;21849:102;;21968:3;21961:10;;21396:581;;;;;:::o;21983:222::-;;22114:2;22103:9;22099:18;22091:26;;22127:71;22195:1;22184:9;22180:17;22171:6;22127:71;:::i;:::-;22081:124;;;;:::o;22211:442::-;;22398:2;22387:9;22383:18;22375:26;;22411:71;22479:1;22468:9;22464:17;22455:6;22411:71;:::i;:::-;22492:72;22560:2;22549:9;22545:18;22536:6;22492:72;:::i;:::-;22574;22642:2;22631:9;22627:18;22618:6;22574:72;:::i;:::-;22365:288;;;;;;:::o;22659:640::-;;22892:3;22881:9;22877:19;22869:27;;22906:71;22974:1;22963:9;22959:17;22950:6;22906:71;:::i;:::-;22987:72;23055:2;23044:9;23040:18;23031:6;22987:72;:::i;:::-;23069;23137:2;23126:9;23122:18;23113:6;23069:72;:::i;:::-;23188:9;23182:4;23178:20;23173:2;23162:9;23158:18;23151:48;23216:76;23287:4;23278:6;23216:76;:::i;:::-;23208:84;;22859:440;;;;;;;:::o;23305:332::-;;23464:2;23453:9;23449:18;23441:26;;23477:71;23545:1;23534:9;23530:17;23521:6;23477:71;:::i;:::-;23558:72;23626:2;23615:9;23611:18;23602:6;23558:72;:::i;:::-;23431:206;;;;;:::o;23643:210::-;;23768:2;23757:9;23753:18;23745:26;;23781:65;23843:1;23832:9;23828:17;23819:6;23781:65;:::i;:::-;23735:118;;;;:::o;23859:222::-;;23990:2;23979:9;23975:18;23967:26;;24003:71;24071:1;24060:9;24056:17;24047:6;24003:71;:::i;:::-;23957:124;;;;:::o;24087:218::-;;24216:2;24205:9;24201:18;24193:26;;24229:69;24295:1;24284:9;24280:17;24271:6;24229:69;:::i;:::-;24183:122;;;;:::o;24311:252::-;;24457:2;24446:9;24442:18;24434:26;;24470:86;24553:1;24542:9;24538:17;24529:6;24470:86;:::i;:::-;24424:139;;;;:::o;24569:313::-;;24720:2;24709:9;24705:18;24697:26;;24769:9;24763:4;24759:20;24755:1;24744:9;24740:17;24733:47;24797:78;24870:4;24861:6;24797:78;:::i;:::-;24789:86;;24687:195;;;;:::o;24888:419::-;;25092:2;25081:9;25077:18;25069:26;;25141:9;25135:4;25131:20;25127:1;25116:9;25112:17;25105:47;25169:131;25295:4;25169:131;:::i;:::-;25161:139;;25059:248;;;:::o;25313:419::-;;25517:2;25506:9;25502:18;25494:26;;25566:9;25560:4;25556:20;25552:1;25541:9;25537:17;25530:47;25594:131;25720:4;25594:131;:::i;:::-;25586:139;;25484:248;;;:::o;25738:419::-;;25942:2;25931:9;25927:18;25919:26;;25991:9;25985:4;25981:20;25977:1;25966:9;25962:17;25955:47;26019:131;26145:4;26019:131;:::i;:::-;26011:139;;25909:248;;;:::o;26163:419::-;;26367:2;26356:9;26352:18;26344:26;;26416:9;26410:4;26406:20;26402:1;26391:9;26387:17;26380:47;26444:131;26570:4;26444:131;:::i;:::-;26436:139;;26334:248;;;:::o;26588:419::-;;26792:2;26781:9;26777:18;26769:26;;26841:9;26835:4;26831:20;26827:1;26816:9;26812:17;26805:47;26869:131;26995:4;26869:131;:::i;:::-;26861:139;;26759:248;;;:::o;27013:419::-;;27217:2;27206:9;27202:18;27194:26;;27266:9;27260:4;27256:20;27252:1;27241:9;27237:17;27230:47;27294:131;27420:4;27294:131;:::i;:::-;27286:139;;27184:248;;;:::o;27438:419::-;;27642:2;27631:9;27627:18;27619:26;;27691:9;27685:4;27681:20;27677:1;27666:9;27662:17;27655:47;27719:131;27845:4;27719:131;:::i;:::-;27711:139;;27609:248;;;:::o;27863:419::-;;28067:2;28056:9;28052:18;28044:26;;28116:9;28110:4;28106:20;28102:1;28091:9;28087:17;28080:47;28144:131;28270:4;28144:131;:::i;:::-;28136:139;;28034:248;;;:::o;28288:419::-;;28492:2;28481:9;28477:18;28469:26;;28541:9;28535:4;28531:20;28527:1;28516:9;28512:17;28505:47;28569:131;28695:4;28569:131;:::i;:::-;28561:139;;28459:248;;;:::o;28713:419::-;;28917:2;28906:9;28902:18;28894:26;;28966:9;28960:4;28956:20;28952:1;28941:9;28937:17;28930:47;28994:131;29120:4;28994:131;:::i;:::-;28986:139;;28884:248;;;:::o;29138:419::-;;29342:2;29331:9;29327:18;29319:26;;29391:9;29385:4;29381:20;29377:1;29366:9;29362:17;29355:47;29419:131;29545:4;29419:131;:::i;:::-;29411:139;;29309:248;;;:::o;29563:419::-;;29767:2;29756:9;29752:18;29744:26;;29816:9;29810:4;29806:20;29802:1;29791:9;29787:17;29780:47;29844:131;29970:4;29844:131;:::i;:::-;29836:139;;29734:248;;;:::o;29988:419::-;;30192:2;30181:9;30177:18;30169:26;;30241:9;30235:4;30231:20;30227:1;30216:9;30212:17;30205:47;30269:131;30395:4;30269:131;:::i;:::-;30261:139;;30159:248;;;:::o;30413:419::-;;30617:2;30606:9;30602:18;30594:26;;30666:9;30660:4;30656:20;30652:1;30641:9;30637:17;30630:47;30694:131;30820:4;30694:131;:::i;:::-;30686:139;;30584:248;;;:::o;30838:419::-;;31042:2;31031:9;31027:18;31019:26;;31091:9;31085:4;31081:20;31077:1;31066:9;31062:17;31055:47;31119:131;31245:4;31119:131;:::i;:::-;31111:139;;31009:248;;;:::o;31263:419::-;;31467:2;31456:9;31452:18;31444:26;;31516:9;31510:4;31506:20;31502:1;31491:9;31487:17;31480:47;31544:131;31670:4;31544:131;:::i;:::-;31536:139;;31434:248;;;:::o;31688:419::-;;31892:2;31881:9;31877:18;31869:26;;31941:9;31935:4;31931:20;31927:1;31916:9;31912:17;31905:47;31969:131;32095:4;31969:131;:::i;:::-;31961:139;;31859:248;;;:::o;32113:419::-;;32317:2;32306:9;32302:18;32294:26;;32366:9;32360:4;32356:20;32352:1;32341:9;32337:17;32330:47;32394:131;32520:4;32394:131;:::i;:::-;32386:139;;32284:248;;;:::o;32538:419::-;;32742:2;32731:9;32727:18;32719:26;;32791:9;32785:4;32781:20;32777:1;32766:9;32762:17;32755:47;32819:131;32945:4;32819:131;:::i;:::-;32811:139;;32709:248;;;:::o;32963:419::-;;33167:2;33156:9;33152:18;33144:26;;33216:9;33210:4;33206:20;33202:1;33191:9;33187:17;33180:47;33244:131;33370:4;33244:131;:::i;:::-;33236:139;;33134:248;;;:::o;33388:419::-;;33592:2;33581:9;33577:18;33569:26;;33641:9;33635:4;33631:20;33627:1;33616:9;33612:17;33605:47;33669:131;33795:4;33669:131;:::i;:::-;33661:139;;33559:248;;;:::o;33813:419::-;;34017:2;34006:9;34002:18;33994:26;;34066:9;34060:4;34056:20;34052:1;34041:9;34037:17;34030:47;34094:131;34220:4;34094:131;:::i;:::-;34086:139;;33984:248;;;:::o;34238:419::-;;34442:2;34431:9;34427:18;34419:26;;34491:9;34485:4;34481:20;34477:1;34466:9;34462:17;34455:47;34519:131;34645:4;34519:131;:::i;:::-;34511:139;;34409:248;;;:::o;34663:419::-;;34867:2;34856:9;34852:18;34844:26;;34916:9;34910:4;34906:20;34902:1;34891:9;34887:17;34880:47;34944:131;35070:4;34944:131;:::i;:::-;34936:139;;34834:248;;;:::o;35088:222::-;;35219:2;35208:9;35204:18;35196:26;;35232:71;35300:1;35289:9;35285:17;35276:6;35232:71;:::i;:::-;35186:124;;;;:::o;35316:1341::-;;35709:3;35698:9;35694:19;35686:27;;35723:71;35791:1;35780:9;35776:17;35767:6;35723:71;:::i;:::-;35841:9;35835:4;35831:20;35826:2;35815:9;35811:18;35804:48;35869:78;35942:4;35933:6;35869:78;:::i;:::-;35861:86;;35994:9;35988:4;35984:20;35979:2;35968:9;35964:18;35957:48;36022:78;36095:4;36086:6;36022:78;:::i;:::-;36014:86;;36110:72;36178:2;36167:9;36163:18;36154:6;36110:72;:::i;:::-;36192:73;36260:3;36249:9;36245:19;36236:6;36192:73;:::i;:::-;36275:67;36337:3;36326:9;36322:19;36313:6;36275:67;:::i;:::-;36352;36414:3;36403:9;36399:19;36390:6;36352:67;:::i;:::-;36429;36491:3;36480:9;36476:19;36467:6;36429:67;:::i;:::-;36506;36568:3;36557:9;36553:19;36544:6;36506:67;:::i;:::-;36583;36645:3;36634:9;36630:19;36621:6;36583:67;:::i;:::-;35676:981;;;;;;;;;;;;;:::o;36663:283::-;;36729:2;36723:9;36713:19;;36771:4;36763:6;36759:17;36878:6;36866:10;36863:22;36842:18;36830:10;36827:34;36824:62;36821:2;;;36889:18;;:::i;:::-;36821:2;36929:10;36925:2;36918:22;36703:243;;;;:::o;36952:331::-;;37103:18;37095:6;37092:30;37089:2;;;37125:18;;:::i;:::-;37089:2;37210:4;37206:9;37199:4;37191:6;37187:17;37183:33;37175:41;;37271:4;37265;37261:15;37253:23;;37018:265;;;:::o;37289:332::-;;37441:18;37433:6;37430:30;37427:2;;;37463:18;;:::i;:::-;37427:2;37548:4;37544:9;37537:4;37529:6;37525:17;37521:33;37513:41;;37609:4;37603;37599:15;37591:23;;37356:265;;;:::o;37627:98::-;;37712:5;37706:12;37696:22;;37685:40;;;:::o;37731:99::-;;37817:5;37811:12;37801:22;;37790:40;;;:::o;37836:168::-;;37953:6;37948:3;37941:19;37993:4;37988:3;37984:14;37969:29;;37931:73;;;;:::o;38010:169::-;;38128:6;38123:3;38116:19;38168:4;38163:3;38159:14;38144:29;;38106:73;;;;:::o;38185:148::-;;38324:3;38309:18;;38299:34;;;;:::o;38339:305::-;;38398:20;38416:1;38398:20;:::i;:::-;38393:25;;38432:20;38450:1;38432:20;:::i;:::-;38427:25;;38586:1;38518:66;38514:74;38511:1;38508:81;38505:2;;;38592:18;;:::i;:::-;38505:2;38636:1;38633;38629:9;38622:16;;38383:261;;;;:::o;38650:185::-;;38707:20;38725:1;38707:20;:::i;:::-;38702:25;;38741:20;38759:1;38741:20;:::i;:::-;38736:25;;38780:1;38770:2;;38785:18;;:::i;:::-;38770:2;38827:1;38824;38820:9;38815:14;;38692:143;;;;:::o;38841:348::-;;38904:20;38922:1;38904:20;:::i;:::-;38899:25;;38938:20;38956:1;38938:20;:::i;:::-;38933:25;;39126:1;39058:66;39054:74;39051:1;39048:81;39043:1;39036:9;39029:17;39025:105;39022:2;;;39133:18;;:::i;:::-;39022:2;39181:1;39178;39174:9;39163:20;;38889:300;;;;:::o;39195:191::-;;39255:20;39273:1;39255:20;:::i;:::-;39250:25;;39289:20;39307:1;39289:20;:::i;:::-;39284:25;;39328:1;39325;39322:8;39319:2;;;39333:18;;:::i;:::-;39319:2;39378:1;39375;39371:9;39363:17;;39240:146;;;;:::o;39392:96::-;;39458:24;39476:5;39458:24;:::i;:::-;39447:35;;39437:51;;;:::o;39494:90::-;;39571:5;39564:13;39557:21;39546:32;;39536:48;;;:::o;39590:77::-;;39656:5;39645:16;;39635:32;;;:::o;39673:149::-;;39749:66;39742:5;39738:78;39727:89;;39717:105;;;:::o;39828:126::-;;39905:42;39898:5;39894:54;39883:65;;39873:81;;;:::o;39960:77::-;;40026:5;40015:16;;40005:32;;;:::o;40043:156::-;;40141:52;40187:5;40141:52;:::i;:::-;40128:65;;40118:81;;;:::o;40205:128::-;;40303:24;40321:5;40303:24;:::i;:::-;40290:37;;40280:53;;;:::o;40339:154::-;40423:6;40418:3;40413;40400:30;40485:1;40476:6;40471:3;40467:16;40460:27;40390:103;;;:::o;40499:307::-;40567:1;40577:113;40591:6;40588:1;40585:13;40577:113;;;40676:1;40671:3;40667:11;40661:18;40657:1;40652:3;40648:11;40641:39;40613:2;40610:1;40606:10;40601:15;;40577:113;;;40708:6;40705:1;40702:13;40699:2;;;40788:1;40779:6;40774:3;40770:16;40763:27;40699:2;40548:258;;;;:::o;40812:171::-;;40874:24;40892:5;40874:24;:::i;:::-;40865:33;;40920:4;40913:5;40910:15;40907:2;;;40928:18;;:::i;:::-;40907:2;40975:1;40968:5;40964:13;40957:20;;40855:128;;;:::o;40989:320::-;;41070:1;41064:4;41060:12;41050:22;;41117:1;41111:4;41107:12;41138:18;41128:2;;41194:4;41186:6;41182:17;41172:27;;41128:2;41256;41248:6;41245:14;41225:18;41222:38;41219:2;;;41275:18;;:::i;:::-;41219:2;41040:269;;;;:::o;41315:233::-;;41377:24;41395:5;41377:24;:::i;:::-;41368:33;;41423:66;41416:5;41413:77;41410:2;;;41493:18;;:::i;:::-;41410:2;41540:1;41533:5;41529:13;41522:20;;41358:190;;;:::o;41554:176::-;;41603:20;41621:1;41603:20;:::i;:::-;41598:25;;41637:20;41655:1;41637:20;:::i;:::-;41632:25;;41676:1;41666:2;;41681:18;;:::i;:::-;41666:2;41722:1;41719;41715:9;41710:14;;41588:142;;;;:::o;41736:180::-;41784:77;41781:1;41774:88;41881:4;41878:1;41871:15;41905:4;41902:1;41895:15;41922:180;41970:77;41967:1;41960:88;42067:4;42064:1;42057:15;42091:4;42088:1;42081:15;42108:180;42156:77;42153:1;42146:88;42253:4;42250:1;42243:15;42277:4;42274:1;42267:15;42294:180;42342:77;42339:1;42332:88;42439:4;42436:1;42429:15;42463:4;42460:1;42453:15;42480:102;;42572:2;42568:7;42563:2;42556:5;42552:14;42548:28;42538:38;;42528:54;;;:::o;42588:122::-;42661:24;42679:5;42661:24;:::i;:::-;42654:5;42651:35;42641:2;;42700:1;42697;42690:12;42641:2;42631:79;:::o;42716:116::-;42786:21;42801:5;42786:21;:::i;:::-;42779:5;42776:32;42766:2;;42822:1;42819;42812:12;42766:2;42756:76;:::o;42838:122::-;42911:24;42929:5;42911:24;:::i;:::-;42904:5;42901:35;42891:2;;42950:1;42947;42940:12;42891:2;42881:79;:::o;42966:120::-;43038:23;43055:5;43038:23;:::i;:::-;43031:5;43028:34;43018:2;;43076:1;43073;43066:12;43018:2;43008:78;:::o;43092:122::-;43165:24;43183:5;43165:24;:::i;:::-;43158:5;43155:35;43145:2;;43204:1;43201;43194:12;43145:2;43135:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport {SafeMath} from \"./utils/SafeMath.sol\";\n\ncontract TokenFactory is  ERC721URIStorage, IERC721Receiver, AccessControl {\n    using SafeMath for uint256;\n\n    uint256 public tokenCounter;\n    IERC20 public collateralToken;\n    IERC20 public rftToken;\n\n    address public Validator;\n\n    struct Diamond {\n        uint256 id;\n        string name;\n        string ipfsHash;\n        address owner;\n        uint256 price;\n        bool authenticate;\n        bool collateralLocked;\n        bool liquidityRemoved;\n        bool reedemDiamond;\n        bool nftLocked;\n    }\n\n    mapping(uint256 => Diamond) public nfts;\n    mapping(address => uint256) public deposit;\n\n    modifier onlyAdmin() {\n        require(\n            hasRole(DEFAULT_ADMIN_ROLE, _msgSender()),\n            'ArthPool: You are not the admin'\n        );\n        _;\n    }\n\n    constructor(IERC20 _tokenAddress, IERC20 _usdt)  ERC721(\"Diamond\", \"DMG\") {\n        tokenCounter = 0;\n        rftToken = _tokenAddress;\n        collateralToken = _usdt;\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n        Validator = msg.sender;\n    }\n\n    function createCollectible(\n        string memory _name,\n        uint256 _diamondPrice,\n        string memory tokenURI\n    ) public returns (uint256) {\n        tokenCounter = tokenCounter + 1;\n        uint256 newItemId = tokenCounter;\n\n        _safeMint(msg.sender, newItemId);\n        _setTokenURI(newItemId, tokenURI);\n\n        nfts[newItemId] = Diamond(\n            newItemId,\n            _name,\n            tokenURI,\n            msg.sender,\n            _diamondPrice,\n            false,\n            false,\n            false,\n            false,\n            false\n        );\n\n        return newItemId;\n    }\n\n    function requestDiamondLiquidity(uint256 _diamondId)\n        public\n    {   \n        Diamond memory _diamond = nfts[_diamondId];\n        _diamond.nftLocked = true;\n        nfts[_diamondId] = _diamond;\n\n        safeTransferFrom(msg.sender, address(Validator), _diamondId);\n    }\n\n    function approveDiamondAuthencity(uint256 _diamondId, bool _authencity) \n        public\n        onlyAdmin\n    {\n        Diamond memory _diamond = nfts[_diamondId];\n        _diamond.authenticate = _authencity;\n        \n        if (_authencity) {\n            _diamond.nftLocked = true;\n            rftToken.approve(_diamond.owner, _diamond.price);\n        } else {\n            _diamond.nftLocked = false;\n            safeTransferFrom(address(Validator), _diamond.owner, _diamondId);\n        }\n\n        nfts[_diamondId] = _diamond;\n    }\n\n    function addDiamondLiquidity(uint256 _diamondId) \n        public \n    {   \n        Diamond memory _diamond = nfts[_diamondId];\n        \n        require(collateralToken.balanceOf(msg.sender) > _diamond.price, 'Token Factory 82: Insufficent Collateral Amount');\n        require(_diamond.authenticate, 'Token Factory 83: Not An Authentic Diamond Representation');\n        require(!_diamond.collateralLocked, 'Token Factory 84: Already Added Liquidation');\n\n        _diamond.collateralLocked = true;\n        nfts[_diamondId] = _diamond;\n\n        collateralToken.transferFrom(msg.sender, address(this), _diamond.price);\n        rftToken.transfer(msg.sender, _diamond.price);\n    }\n\n    // return collateral\n    function reedemDiamond(uint256 _diamondId, uint256 _amount) public {\n        Diamond memory _diamond = nfts[_diamondId];\n        require(_diamond.price >= _amount, 'Token Factory 112: Not Enough Reedemable Collateral');\n        require(!_diamond.reedemDiamond, 'Token Factory 113: Already Diamond Reedemed');\n        \n        _diamond.reedemDiamond = true;\n        _diamond.liquidityRemoved = true;\n        nfts[_diamondId] = _diamond;\n\n        rftToken.transferFrom(msg.sender, address(this), _diamond.price);\n    }\n\n    // return NFT\n    function repayDiamond(uint256 _diamondId) \n        public \n        onlyAdmin\n    {   \n        Diamond memory _diamond = nfts[_diamondId];\n        _diamond.nftLocked = false;\n        nfts[_diamondId] = _diamond;\n\n        safeTransferFrom(address(Validator), _diamond.owner, _diamondId);\n    }\n\n    function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, AccessControl) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n}\n",
  "sourcePath": "/Users/newsgate/Work/RFT-Batch-NFT/src/contracts/TokenFactory.sol",
  "ast": {
    "absolutePath": "/Users/newsgate/Work/RFT-Batch-NFT/src/contracts/TokenFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        2986
      ],
      "Address": [
        4389
      ],
      "Context": [
        4412
      ],
      "Counters": [
        4473
      ],
      "ERC165": [
        4700
      ],
      "ERC721": [
        3804
      ],
      "ERC721URIStorage": [
        4066
      ],
      "IAccessControl": [
        2662
      ],
      "IERC165": [
        4712
      ],
      "IERC20": [
        1710
      ],
      "IERC721": [
        3920
      ],
      "IERC721Metadata": [
        4093
      ],
      "IERC721Receiver": [
        3938
      ],
      "SafeMath": [
        2618
      ],
      "Strings": [
        4676
      ],
      "TokenFactory": [
        549
      ]
    },
    "id": 550,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 85,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 86,
        "nodeType": "ImportDirective",
        "scope": 550,
        "sourceUnit": 4067,
        "src": "57:78:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 87,
        "nodeType": "ImportDirective",
        "scope": 550,
        "sourceUnit": 4474,
        "src": "136:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 88,
        "nodeType": "ImportDirective",
        "scope": 550,
        "sourceUnit": 2987,
        "src": "189:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/newsgate/Work/RFT-Batch-NFT/src/contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 89,
        "nodeType": "ImportDirective",
        "scope": 550,
        "sourceUnit": 1711,
        "src": "248:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 90,
        "nodeType": "ImportDirective",
        "scope": 550,
        "sourceUnit": 3939,
        "src": "282:66:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/newsgate/Work/RFT-Batch-NFT/src/contracts/utils/SafeMath.sol",
        "file": "./utils/SafeMath.sol",
        "id": 92,
        "nodeType": "ImportDirective",
        "scope": 550,
        "sourceUnit": 2619,
        "src": "349:46:2",
        "symbolAliases": [
          {
            "foreign": {
              "id": 91,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "357:8:2",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 93,
              "name": "ERC721URIStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4066,
              "src": "423:16:2"
            },
            "id": 94,
            "nodeType": "InheritanceSpecifier",
            "src": "423:16:2"
          },
          {
            "baseName": {
              "id": 95,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3938,
              "src": "441:15:2"
            },
            "id": 96,
            "nodeType": "InheritanceSpecifier",
            "src": "441:15:2"
          },
          {
            "baseName": {
              "id": 97,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2986,
              "src": "458:13:2"
            },
            "id": 98,
            "nodeType": "InheritanceSpecifier",
            "src": "458:13:2"
          }
        ],
        "contractDependencies": [
          2662,
          2986,
          3804,
          3920,
          3938,
          4066,
          4093,
          4412,
          4700,
          4712
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 549,
        "linearizedBaseContracts": [
          549,
          2986,
          3938,
          4066,
          3804,
          4093,
          3920,
          4700,
          4712,
          2662,
          4412
        ],
        "name": "TokenFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 101,
            "libraryName": {
              "id": 99,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2618,
              "src": "484:8:2"
            },
            "nodeType": "UsingForDirective",
            "src": "478:27:2",
            "typeName": {
              "id": 100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "497:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "d082e381",
            "id": 103,
            "mutability": "mutable",
            "name": "tokenCounter",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "511:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 102,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "511:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b2016bd4",
            "id": 106,
            "mutability": "mutable",
            "name": "collateralToken",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "544:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1710",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 105,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 104,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1710,
                "src": "544:6:2"
              },
              "referencedDeclaration": 1710,
              "src": "544:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1710",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da3ec8f9",
            "id": 109,
            "mutability": "mutable",
            "name": "rftToken",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "579:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1710",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 108,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 107,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1710,
                "src": "579:6:2"
              },
              "referencedDeclaration": 1710,
              "src": "579:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1710",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6d43ecc6",
            "id": 111,
            "mutability": "mutable",
            "name": "Validator",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "608:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 110,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "608:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "TokenFactory.Diamond",
            "id": 132,
            "members": [
              {
                "constant": false,
                "id": 113,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "664:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 112,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "664:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 115,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "684:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 114,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "684:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 117,
                "mutability": "mutable",
                "name": "ipfsHash",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "705:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 116,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "705:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 119,
                "mutability": "mutable",
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "730:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 118,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "730:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 121,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "753:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 120,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "753:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 123,
                "mutability": "mutable",
                "name": "authenticate",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "776:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 122,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "776:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 125,
                "mutability": "mutable",
                "name": "collateralLocked",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "803:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 124,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "803:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 127,
                "mutability": "mutable",
                "name": "liquidityRemoved",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "834:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 126,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "834:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 129,
                "mutability": "mutable",
                "name": "reedemDiamond",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "865:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 128,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "865:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 131,
                "mutability": "mutable",
                "name": "nftLocked",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "893:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 130,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "893:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Diamond",
            "nodeType": "StructDefinition",
            "scope": 549,
            "src": "639:275:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "265aa621",
            "id": 137,
            "mutability": "mutable",
            "name": "nfts",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "920:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
              "typeString": "mapping(uint256 => struct TokenFactory.Diamond)"
            },
            "typeName": {
              "id": 136,
              "keyType": {
                "id": 133,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "928:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "920:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                "typeString": "mapping(uint256 => struct TokenFactory.Diamond)"
              },
              "valueType": {
                "id": 135,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 134,
                  "name": "Diamond",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "939:7:2"
                },
                "referencedDeclaration": 132,
                "src": "939:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Diamond_$132_storage_ptr",
                  "typeString": "struct TokenFactory.Diamond"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f340fa01",
            "id": 141,
            "mutability": "mutable",
            "name": "deposit",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "965:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 140,
              "keyType": {
                "id": 138,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "973:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "965:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 139,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "984:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "1035:147:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 145,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2684,
                            "src": "1074:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 146,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4400,
                              "src": "1094:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1094:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 144,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2765,
                          "src": "1066:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1066:41:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41727468506f6f6c3a20596f7520617265206e6f74207468652061646d696e",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1121:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ac5ac087ff2e49f2f2c13d01230bbd8a45790d42292bd244d92e61a5a9c7125",
                          "typeString": "literal_string \"ArthPool: You are not the admin\""
                        },
                        "value": "ArthPool: You are not the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ac5ac087ff2e49f2f2c13d01230bbd8a45790d42292bd244d92e61a5a9c7125",
                          "typeString": "literal_string \"ArthPool: You are not the admin\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1045:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1045:119:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "1045:119:2"
                },
                {
                  "id": 152,
                  "nodeType": "PlaceholderStatement",
                  "src": "1174:1:2"
                }
              ]
            },
            "id": 154,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:2:2"
            },
            "src": "1014:168:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "1262:186:2",
              "statements": [
                {
                  "expression": {
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 167,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "1272:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1287:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1272:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:16:2"
                },
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 171,
                      "name": "rftToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "1298:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1710",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 172,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "1309:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1710",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1298:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1710",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "1298:24:2"
                },
                {
                  "expression": {
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 175,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "1332:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1710",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 176,
                      "name": "_usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "1350:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1710",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1332:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1710",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1332:23:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 180,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2684,
                        "src": "1376:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 181,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4400,
                          "src": "1396:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1396:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 179,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2900,
                      "src": "1365:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1365:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1365:44:2"
                },
                {
                  "expression": {
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 185,
                      "name": "Validator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "1419:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 186,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1431:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1431:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1419:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:22:2"
                }
              ]
            },
            "id": 191,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4469616d6f6e64",
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1244:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_aadb29765cb3e4f21bde5ecd65db8e565d901b6c9394dcec22aa81b8ff2d6e2f",
                      "typeString": "literal_string \"Diamond\""
                    },
                    "value": "Diamond"
                  },
                  {
                    "hexValue": "444d47",
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1255:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5b5d0e545c547e064bc1e007e74a27d967f52e3ca9890e08c698b90aa8211137",
                      "typeString": "literal_string \"DMG\""
                    },
                    "value": "DMG"
                  }
                ],
                "id": 165,
                "modifierName": {
                  "id": 162,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3804,
                  "src": "1237:6:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1237:24:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "1200:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1710",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 156,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 155,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1710,
                      "src": "1200:6:2"
                    },
                    "referencedDeclaration": 1710,
                    "src": "1200:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1710",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "_usdt",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "1222:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1710",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 159,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 158,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1710,
                      "src": "1222:6:2"
                    },
                    "referencedDeclaration": 1710,
                    "src": "1222:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1710",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1199:36:2"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1262:0:2"
            },
            "scope": 549,
            "src": "1188:260:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "1604:459:2",
              "statements": [
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 202,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "1614:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 203,
                        "name": "tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "1629:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1644:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1629:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1614:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "1614:31:2"
                },
                {
                  "assignments": [
                    209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 209,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nodeType": "VariableDeclaration",
                      "scope": 243,
                      "src": "1655:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 208,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1655:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 211,
                  "initialValue": {
                    "id": 210,
                    "name": "tokenCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 103,
                    "src": "1675:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1655:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 213,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1708:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1708:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 215,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "1720:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 212,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3498,
                        3527
                      ],
                      "referencedDeclaration": 3498,
                      "src": "1698:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1698:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "1698:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 219,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "1753:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 220,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "1764:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 218,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4035,
                      "src": "1740:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1740:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:33:2"
                },
                {
                  "expression": {
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 223,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1784:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                          "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                        }
                      },
                      "id": 225,
                      "indexExpression": {
                        "id": 224,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "1789:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1784:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_storage",
                        "typeString": "struct TokenFactory.Diamond storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 227,
                          "name": "newItemId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 209,
                          "src": "1823:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 228,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "1846:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 229,
                          "name": "tokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 197,
                          "src": "1865:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 230,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1887:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1887:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 232,
                          "name": "_diamondPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "1911:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1938:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1957:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1976:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1995:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2014:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 226,
                        "name": "Diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "1802:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Diamond_$132_storage_ptr_$",
                          "typeString": "type(struct TokenFactory.Diamond storage pointer)"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1802:227:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond memory"
                      }
                    },
                    "src": "1784:245:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:245:2"
                },
                {
                  "expression": {
                    "id": 241,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 209,
                    "src": "2047:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 201,
                  "id": 242,
                  "nodeType": "Return",
                  "src": "2040:16:2"
                }
              ]
            },
            "functionSelector": "51011264",
            "id": 244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollectible",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "1490:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "_diamondPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "1519:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1519:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "1550:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1480:98:2"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "1595:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1595:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1594:9:2"
            },
            "scope": 549,
            "src": "1454:609:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "2141:205:2",
              "statements": [
                {
                  "assignments": [
                    251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 251,
                      "mutability": "mutable",
                      "name": "_diamond",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "2154:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond"
                      },
                      "typeName": {
                        "id": 250,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 249,
                          "name": "Diamond",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 132,
                          "src": "2154:7:2"
                        },
                        "referencedDeclaration": 132,
                        "src": "2154:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_storage_ptr",
                          "typeString": "struct TokenFactory.Diamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "baseExpression": {
                      "id": 252,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "2180:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                        "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                      }
                    },
                    "id": 254,
                    "indexExpression": {
                      "id": 253,
                      "name": "_diamondId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "2185:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2180:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2154:42:2"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 256,
                        "name": "_diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "2206:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                          "typeString": "struct TokenFactory.Diamond memory"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nftLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "2206:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2227:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2206:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2206:25:2"
                },
                {
                  "expression": {
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 262,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "2241:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                          "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                        }
                      },
                      "id": 264,
                      "indexExpression": {
                        "id": 263,
                        "name": "_diamondId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "2246:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2241:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_storage",
                        "typeString": "struct TokenFactory.Diamond storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 265,
                      "name": "_diamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "2260:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond memory"
                      }
                    },
                    "src": "2241:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "2241:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 269,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2296:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2296:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 273,
                            "name": "Validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "2316:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2308:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 271,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2308:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2308:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 275,
                        "name": "_diamondId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "2328:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 268,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3365,
                        3395
                      ],
                      "referencedDeclaration": 3365,
                      "src": "2279:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2279:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:60:2"
                }
              ]
            },
            "functionSelector": "59802f78",
            "id": 279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestDiamondLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "_diamondId",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2102:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2102:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2101:20:2"
            },
            "returnParameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2141:0:2"
            },
            "scope": 549,
            "src": "2069:277:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "2462:424:2",
              "statements": [
                {
                  "assignments": [
                    290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 290,
                      "mutability": "mutable",
                      "name": "_diamond",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "2472:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond"
                      },
                      "typeName": {
                        "id": 289,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 288,
                          "name": "Diamond",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 132,
                          "src": "2472:7:2"
                        },
                        "referencedDeclaration": 132,
                        "src": "2472:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_storage_ptr",
                          "typeString": "struct TokenFactory.Diamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 294,
                  "initialValue": {
                    "baseExpression": {
                      "id": 291,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "2498:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                        "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                      }
                    },
                    "id": 293,
                    "indexExpression": {
                      "id": 292,
                      "name": "_diamondId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 281,
                      "src": "2503:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2498:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2472:42:2"
                },
                {
                  "expression": {
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 295,
                        "name": "_diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "2524:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                          "typeString": "struct TokenFactory.Diamond memory"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "authenticate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123,
                      "src": "2524:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 298,
                      "name": "_authencity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "2548:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2524:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "2524:35:2"
                },
                {
                  "condition": {
                    "id": 301,
                    "name": "_authencity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 283,
                    "src": "2582:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 334,
                    "nodeType": "Block",
                    "src": "2713:129:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 318,
                              "name": "_diamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 290,
                              "src": "2727:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                                "typeString": "struct TokenFactory.Diamond memory"
                              }
                            },
                            "id": 320,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "nftLocked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 131,
                            "src": "2727:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2748:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2727:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "2727:26:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 327,
                                  "name": "Validator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "2792:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2784:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 325,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2784:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2784:18:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 329,
                                "name": "_diamond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 290,
                                "src": "2804:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                                  "typeString": "struct TokenFactory.Diamond memory"
                                }
                              },
                              "id": 330,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 119,
                              "src": "2804:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 331,
                              "name": "_diamondId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "2820:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 324,
                            "name": "safeTransferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3365,
                              3395
                            ],
                            "referencedDeclaration": 3365,
                            "src": "2767:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2767:64:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 333,
                        "nodeType": "ExpressionStatement",
                        "src": "2767:64:2"
                      }
                    ]
                  },
                  "id": 335,
                  "nodeType": "IfStatement",
                  "src": "2578:264:2",
                  "trueBody": {
                    "id": 317,
                    "nodeType": "Block",
                    "src": "2595:112:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 302,
                              "name": "_diamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 290,
                              "src": "2609:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                                "typeString": "struct TokenFactory.Diamond memory"
                              }
                            },
                            "id": 304,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "nftLocked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 131,
                            "src": "2609:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2630:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2609:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 307,
                        "nodeType": "ExpressionStatement",
                        "src": "2609:25:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 311,
                                "name": "_diamond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 290,
                                "src": "2665:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                                  "typeString": "struct TokenFactory.Diamond memory"
                                }
                              },
                              "id": 312,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 119,
                              "src": "2665:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 313,
                                "name": "_diamond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 290,
                                "src": "2681:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                                  "typeString": "struct TokenFactory.Diamond memory"
                                }
                              },
                              "id": 314,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 121,
                              "src": "2681:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 308,
                              "name": "rftToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "2648:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1710",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1679,
                            "src": "2648:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2648:48:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 316,
                        "nodeType": "ExpressionStatement",
                        "src": "2648:48:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 336,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "2852:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                          "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                        }
                      },
                      "id": 338,
                      "indexExpression": {
                        "id": 337,
                        "name": "_diamondId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "2857:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2852:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_storage",
                        "typeString": "struct TokenFactory.Diamond storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 339,
                      "name": "_diamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "2871:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond memory"
                      }
                    },
                    "src": "2852:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "2852:27:2"
                }
              ]
            },
            "functionSelector": "caacac96",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 286,
                "modifierName": {
                  "id": 285,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154,
                  "src": "2448:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2448:9:2"
              }
            ],
            "name": "approveDiamondAuthencity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "_diamondId",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "2386:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "_authencity",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "2406:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2406:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2385:38:2"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2462:0:2"
            },
            "scope": 549,
            "src": "2352:534:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "2962:605:2",
              "statements": [
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "_diamond",
                      "nodeType": "VariableDeclaration",
                      "scope": 414,
                      "src": "2975:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond"
                      },
                      "typeName": {
                        "id": 349,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 348,
                          "name": "Diamond",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 132,
                          "src": "2975:7:2"
                        },
                        "referencedDeclaration": 132,
                        "src": "2975:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_storage_ptr",
                          "typeString": "struct TokenFactory.Diamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 354,
                  "initialValue": {
                    "baseExpression": {
                      "id": 351,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "3001:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                        "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                      }
                    },
                    "id": 353,
                    "indexExpression": {
                      "id": 352,
                      "name": "_diamondId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "3006:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3001:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2975:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 358,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3070:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3070:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 356,
                              "name": "collateralToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "3044:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1710",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1649,
                            "src": "3044:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3044:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 361,
                            "name": "_diamond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "3084:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                              "typeString": "struct TokenFactory.Diamond memory"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 121,
                          "src": "3084:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3044:54:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20466163746f72792038323a20496e737566666963656e7420436f6c6c61746572616c20416d6f756e74",
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3100:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8834d8b72386b4fb442990d376b87772e6f65593f4c9c791b7176a5f3adb5d1f",
                          "typeString": "literal_string \"Token Factory 82: Insufficent Collateral Amount\""
                        },
                        "value": "Token Factory 82: Insufficent Collateral Amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8834d8b72386b4fb442990d376b87772e6f65593f4c9c791b7176a5f3adb5d1f",
                          "typeString": "literal_string \"Token Factory 82: Insufficent Collateral Amount\""
                        }
                      ],
                      "id": 355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3036:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3036:114:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "3036:114:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 368,
                          "name": "_diamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "3168:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                            "typeString": "struct TokenFactory.Diamond memory"
                          }
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "authenticate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 123,
                        "src": "3168:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20466163746f72792038333a204e6f7420416e2041757468656e746963204469616d6f6e6420526570726573656e746174696f6e",
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3191:59:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_351dd134429b39d27e104f78a15c46bd15f35653786d5d4798c3af637a2dce2b",
                          "typeString": "literal_string \"Token Factory 83: Not An Authentic Diamond Representation\""
                        },
                        "value": "Token Factory 83: Not An Authentic Diamond Representation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_351dd134429b39d27e104f78a15c46bd15f35653786d5d4798c3af637a2dce2b",
                          "typeString": "literal_string \"Token Factory 83: Not An Authentic Diamond Representation\""
                        }
                      ],
                      "id": 367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3160:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3160:91:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "3160:91:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3269:26:2",
                        "subExpression": {
                          "expression": {
                            "id": 374,
                            "name": "_diamond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "3270:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                              "typeString": "struct TokenFactory.Diamond memory"
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateralLocked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 125,
                          "src": "3270:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20466163746f72792038343a20416c7265616479204164646564204c69717569646174696f6e",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3297:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c44bbd17a7b8f0374d75fd764867b679495f93d1b220bb255f65aab7263c0f5c",
                          "typeString": "literal_string \"Token Factory 84: Already Added Liquidation\""
                        },
                        "value": "Token Factory 84: Already Added Liquidation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c44bbd17a7b8f0374d75fd764867b679495f93d1b220bb255f65aab7263c0f5c",
                          "typeString": "literal_string \"Token Factory 84: Already Added Liquidation\""
                        }
                      ],
                      "id": 373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3261:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3261:82:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "3261:82:2"
                },
                {
                  "expression": {
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 380,
                        "name": "_diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "3354:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                          "typeString": "struct TokenFactory.Diamond memory"
                        }
                      },
                      "id": 382,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 125,
                      "src": "3354:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3382:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3354:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:32:2"
                },
                {
                  "expression": {
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 386,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "3396:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                          "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                        }
                      },
                      "id": 388,
                      "indexExpression": {
                        "id": 387,
                        "name": "_diamondId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "3401:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3396:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_storage",
                        "typeString": "struct TokenFactory.Diamond storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 389,
                      "name": "_diamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "3415:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond memory"
                      }
                    },
                    "src": "3396:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "3396:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 395,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3463:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3463:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 399,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3483:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenFactory_$549",
                              "typeString": "contract TokenFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenFactory_$549",
                              "typeString": "contract TokenFactory"
                            }
                          ],
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3475:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 397,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3475:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3475:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 401,
                          "name": "_diamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "3490:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                            "typeString": "struct TokenFactory.Diamond memory"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 121,
                        "src": "3490:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 392,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "3434:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1710",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1691,
                      "src": "3434:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3434:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "3434:71:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 408,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3533:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3533:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 410,
                          "name": "_diamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "3545:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                            "typeString": "struct TokenFactory.Diamond memory"
                          }
                        },
                        "id": 411,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 121,
                        "src": "3545:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 405,
                        "name": "rftToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "3515:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1710",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1659,
                      "src": "3515:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3515:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "3515:45:2"
                }
              ]
            },
            "functionSelector": "e67ed454",
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDiamondLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "_diamondId",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "2921:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2921:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2920:20:2"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2962:0:2"
            },
            "scope": 549,
            "src": "2892:675:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 475,
              "nodeType": "Block",
              "src": "3665:449:2",
              "statements": [
                {
                  "assignments": [
                    424
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 424,
                      "mutability": "mutable",
                      "name": "_diamond",
                      "nodeType": "VariableDeclaration",
                      "scope": 475,
                      "src": "3675:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond"
                      },
                      "typeName": {
                        "id": 423,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 422,
                          "name": "Diamond",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 132,
                          "src": "3675:7:2"
                        },
                        "referencedDeclaration": 132,
                        "src": "3675:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_storage_ptr",
                          "typeString": "struct TokenFactory.Diamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 428,
                  "initialValue": {
                    "baseExpression": {
                      "id": 425,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "3701:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                        "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                      }
                    },
                    "id": 427,
                    "indexExpression": {
                      "id": 426,
                      "name": "_diamondId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "3706:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3701:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3675:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 430,
                            "name": "_diamond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 424,
                            "src": "3735:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                              "typeString": "struct TokenFactory.Diamond memory"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 121,
                          "src": "3735:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 432,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "3753:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3735:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20466163746f7279203131323a204e6f7420456e6f7567682052656564656d61626c6520436f6c6c61746572616c",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3762:53:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_357864d476674fe403c5ffc4d36002992f14b6b44ad472b3a0b82dbd16b11c3e",
                          "typeString": "literal_string \"Token Factory 112: Not Enough Reedemable Collateral\""
                        },
                        "value": "Token Factory 112: Not Enough Reedemable Collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_357864d476674fe403c5ffc4d36002992f14b6b44ad472b3a0b82dbd16b11c3e",
                          "typeString": "literal_string \"Token Factory 112: Not Enough Reedemable Collateral\""
                        }
                      ],
                      "id": 429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3727:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3727:89:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "3727:89:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3834:23:2",
                        "subExpression": {
                          "expression": {
                            "id": 438,
                            "name": "_diamond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 424,
                            "src": "3835:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                              "typeString": "struct TokenFactory.Diamond memory"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reedemDiamond",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 129,
                          "src": "3835:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20466163746f7279203131333a20416c7265616479204469616d6f6e642052656564656d6564",
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3859:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75ed76e1a89d3de83f28291dc4cb4dd82c990258429055f3c3db1bb27ddf5fa7",
                          "typeString": "literal_string \"Token Factory 113: Already Diamond Reedemed\""
                        },
                        "value": "Token Factory 113: Already Diamond Reedemed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75ed76e1a89d3de83f28291dc4cb4dd82c990258429055f3c3db1bb27ddf5fa7",
                          "typeString": "literal_string \"Token Factory 113: Already Diamond Reedemed\""
                        }
                      ],
                      "id": 437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3826:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3826:79:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "3826:79:2"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 444,
                        "name": "_diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "3924:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                          "typeString": "struct TokenFactory.Diamond memory"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reedemDiamond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 129,
                      "src": "3924:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3949:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3924:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "3924:29:2"
                },
                {
                  "expression": {
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 450,
                        "name": "_diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "3963:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                          "typeString": "struct TokenFactory.Diamond memory"
                        }
                      },
                      "id": 452,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "liquidityRemoved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 127,
                      "src": "3963:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3991:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3963:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "3963:32:2"
                },
                {
                  "expression": {
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 456,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "4005:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                          "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                        }
                      },
                      "id": 458,
                      "indexExpression": {
                        "id": 457,
                        "name": "_diamondId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "4010:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4005:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_storage",
                        "typeString": "struct TokenFactory.Diamond storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 459,
                      "name": "_diamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "4024:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond memory"
                      }
                    },
                    "src": "4005:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "4005:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4065:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4065:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 469,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4085:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenFactory_$549",
                              "typeString": "contract TokenFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenFactory_$549",
                              "typeString": "contract TokenFactory"
                            }
                          ],
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4077:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 467,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4077:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4077:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 471,
                          "name": "_diamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "4092:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                            "typeString": "struct TokenFactory.Diamond memory"
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 121,
                        "src": "4092:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 462,
                        "name": "rftToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "4043:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1710",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1691,
                      "src": "4043:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4043:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "4043:64:2"
                }
              ]
            },
            "functionSelector": "89344d1f",
            "id": 476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reedemDiamond",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "_diamondId",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "3621:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3621:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "3641:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3641:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3620:37:2"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3665:0:2"
            },
            "scope": 549,
            "src": "3598:516:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "4219:210:2",
              "statements": [
                {
                  "assignments": [
                    485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 485,
                      "mutability": "mutable",
                      "name": "_diamond",
                      "nodeType": "VariableDeclaration",
                      "scope": 512,
                      "src": "4232:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond"
                      },
                      "typeName": {
                        "id": 484,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 483,
                          "name": "Diamond",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 132,
                          "src": "4232:7:2"
                        },
                        "referencedDeclaration": 132,
                        "src": "4232:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_storage_ptr",
                          "typeString": "struct TokenFactory.Diamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 489,
                  "initialValue": {
                    "baseExpression": {
                      "id": 486,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "4258:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                        "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                      }
                    },
                    "id": 488,
                    "indexExpression": {
                      "id": 487,
                      "name": "_diamondId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "4263:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4258:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4232:42:2"
                },
                {
                  "expression": {
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 490,
                        "name": "_diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "4284:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                          "typeString": "struct TokenFactory.Diamond memory"
                        }
                      },
                      "id": 492,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nftLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "4284:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4305:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4284:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "4284:26:2"
                },
                {
                  "expression": {
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 496,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "4320:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                          "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                        }
                      },
                      "id": 498,
                      "indexExpression": {
                        "id": 497,
                        "name": "_diamondId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "4325:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4320:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_storage",
                        "typeString": "struct TokenFactory.Diamond storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 499,
                      "name": "_diamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "4339:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond memory"
                      }
                    },
                    "src": "4320:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "4320:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 505,
                            "name": "Validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "4383:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4375:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 503,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4375:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4375:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 507,
                          "name": "_diamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "4395:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                            "typeString": "struct TokenFactory.Diamond memory"
                          }
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 119,
                        "src": "4395:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 509,
                        "name": "_diamondId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "4411:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 502,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3365,
                        3395
                      ],
                      "referencedDeclaration": 3365,
                      "src": "4358:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4358:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "4358:64:2"
                }
              ]
            },
            "functionSelector": "a62e555c",
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 481,
                "modifierName": {
                  "id": 480,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154,
                  "src": "4205:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4205:9:2"
              }
            ],
            "name": "repayDiamond",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "_diamondId",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "4160:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4160:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4159:20:2"
            },
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4219:0:2"
            },
            "scope": 549,
            "src": "4138:291:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3937
            ],
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "4543:54:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 527,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "4560:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenFactory_$549",
                          "typeString": "contract TokenFactory"
                        }
                      },
                      "id": 528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 532,
                      "src": "4560:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "4560:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 526,
                  "id": 530,
                  "nodeType": "Return",
                  "src": "4553:37:2"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 523,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4517:8:2"
            },
            "parameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "4461:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4461:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "4470:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4470:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "4479:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4479:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "4488:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4488:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4460:41:2"
            },
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 525,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "4535:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4535:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4534:8:2"
            },
            "scope": 549,
            "src": "4435:162:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2746,
              3080
            ],
            "body": {
              "id": 547,
              "nodeType": "Block",
              "src": "4717:60:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 544,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "4758:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 542,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "4734:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TokenFactory_$549_$",
                          "typeString": "type(contract super TokenFactory)"
                        }
                      },
                      "id": 543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2746,
                      "src": "4734:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4734:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 541,
                  "id": 546,
                  "nodeType": "Return",
                  "src": "4727:43:2"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 538,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 536,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3804,
                  "src": "4679:6:2"
                },
                {
                  "id": 537,
                  "name": "AccessControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2986,
                  "src": "4687:13:2"
                }
              ],
              "src": "4670:31:2"
            },
            "parameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "4630:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4630:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4629:20:2"
            },
            "returnParameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "4711:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4711:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4710:6:2"
            },
            "scope": 549,
            "src": "4603:174:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 550,
        "src": "397:4382:2"
      }
    ],
    "src": "32:4748:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/newsgate/Work/RFT-Batch-NFT/src/contracts/TokenFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        2986
      ],
      "Address": [
        4389
      ],
      "Context": [
        4412
      ],
      "Counters": [
        4473
      ],
      "ERC165": [
        4700
      ],
      "ERC721": [
        3804
      ],
      "ERC721URIStorage": [
        4066
      ],
      "IAccessControl": [
        2662
      ],
      "IERC165": [
        4712
      ],
      "IERC20": [
        1710
      ],
      "IERC721": [
        3920
      ],
      "IERC721Metadata": [
        4093
      ],
      "IERC721Receiver": [
        3938
      ],
      "SafeMath": [
        2618
      ],
      "Strings": [
        4676
      ],
      "TokenFactory": [
        549
      ]
    },
    "id": 550,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 85,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 86,
        "nodeType": "ImportDirective",
        "scope": 550,
        "sourceUnit": 4067,
        "src": "57:78:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 87,
        "nodeType": "ImportDirective",
        "scope": 550,
        "sourceUnit": 4474,
        "src": "136:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 88,
        "nodeType": "ImportDirective",
        "scope": 550,
        "sourceUnit": 2987,
        "src": "189:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/newsgate/Work/RFT-Batch-NFT/src/contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 89,
        "nodeType": "ImportDirective",
        "scope": 550,
        "sourceUnit": 1711,
        "src": "248:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 90,
        "nodeType": "ImportDirective",
        "scope": 550,
        "sourceUnit": 3939,
        "src": "282:66:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/newsgate/Work/RFT-Batch-NFT/src/contracts/utils/SafeMath.sol",
        "file": "./utils/SafeMath.sol",
        "id": 92,
        "nodeType": "ImportDirective",
        "scope": 550,
        "sourceUnit": 2619,
        "src": "349:46:2",
        "symbolAliases": [
          {
            "foreign": {
              "id": 91,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "357:8:2",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 93,
              "name": "ERC721URIStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4066,
              "src": "423:16:2"
            },
            "id": 94,
            "nodeType": "InheritanceSpecifier",
            "src": "423:16:2"
          },
          {
            "baseName": {
              "id": 95,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3938,
              "src": "441:15:2"
            },
            "id": 96,
            "nodeType": "InheritanceSpecifier",
            "src": "441:15:2"
          },
          {
            "baseName": {
              "id": 97,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2986,
              "src": "458:13:2"
            },
            "id": 98,
            "nodeType": "InheritanceSpecifier",
            "src": "458:13:2"
          }
        ],
        "contractDependencies": [
          2662,
          2986,
          3804,
          3920,
          3938,
          4066,
          4093,
          4412,
          4700,
          4712
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 549,
        "linearizedBaseContracts": [
          549,
          2986,
          3938,
          4066,
          3804,
          4093,
          3920,
          4700,
          4712,
          2662,
          4412
        ],
        "name": "TokenFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 101,
            "libraryName": {
              "id": 99,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2618,
              "src": "484:8:2"
            },
            "nodeType": "UsingForDirective",
            "src": "478:27:2",
            "typeName": {
              "id": 100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "497:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "d082e381",
            "id": 103,
            "mutability": "mutable",
            "name": "tokenCounter",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "511:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 102,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "511:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b2016bd4",
            "id": 106,
            "mutability": "mutable",
            "name": "collateralToken",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "544:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1710",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 105,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 104,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1710,
                "src": "544:6:2"
              },
              "referencedDeclaration": 1710,
              "src": "544:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1710",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da3ec8f9",
            "id": 109,
            "mutability": "mutable",
            "name": "rftToken",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "579:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1710",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 108,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 107,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1710,
                "src": "579:6:2"
              },
              "referencedDeclaration": 1710,
              "src": "579:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1710",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6d43ecc6",
            "id": 111,
            "mutability": "mutable",
            "name": "Validator",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "608:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 110,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "608:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "TokenFactory.Diamond",
            "id": 132,
            "members": [
              {
                "constant": false,
                "id": 113,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "664:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 112,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "664:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 115,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "684:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 114,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "684:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 117,
                "mutability": "mutable",
                "name": "ipfsHash",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "705:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 116,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "705:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 119,
                "mutability": "mutable",
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "730:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 118,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "730:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 121,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "753:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 120,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "753:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 123,
                "mutability": "mutable",
                "name": "authenticate",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "776:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 122,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "776:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 125,
                "mutability": "mutable",
                "name": "collateralLocked",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "803:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 124,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "803:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 127,
                "mutability": "mutable",
                "name": "liquidityRemoved",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "834:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 126,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "834:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 129,
                "mutability": "mutable",
                "name": "reedemDiamond",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "865:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 128,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "865:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 131,
                "mutability": "mutable",
                "name": "nftLocked",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "893:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 130,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "893:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Diamond",
            "nodeType": "StructDefinition",
            "scope": 549,
            "src": "639:275:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "265aa621",
            "id": 137,
            "mutability": "mutable",
            "name": "nfts",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "920:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
              "typeString": "mapping(uint256 => struct TokenFactory.Diamond)"
            },
            "typeName": {
              "id": 136,
              "keyType": {
                "id": 133,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "928:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "920:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                "typeString": "mapping(uint256 => struct TokenFactory.Diamond)"
              },
              "valueType": {
                "id": 135,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 134,
                  "name": "Diamond",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "939:7:2"
                },
                "referencedDeclaration": 132,
                "src": "939:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Diamond_$132_storage_ptr",
                  "typeString": "struct TokenFactory.Diamond"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f340fa01",
            "id": 141,
            "mutability": "mutable",
            "name": "deposit",
            "nodeType": "VariableDeclaration",
            "scope": 549,
            "src": "965:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 140,
              "keyType": {
                "id": 138,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "973:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "965:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 139,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "984:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "1035:147:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 145,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2684,
                            "src": "1074:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 146,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4400,
                              "src": "1094:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1094:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 144,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2765,
                          "src": "1066:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1066:41:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41727468506f6f6c3a20596f7520617265206e6f74207468652061646d696e",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1121:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ac5ac087ff2e49f2f2c13d01230bbd8a45790d42292bd244d92e61a5a9c7125",
                          "typeString": "literal_string \"ArthPool: You are not the admin\""
                        },
                        "value": "ArthPool: You are not the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ac5ac087ff2e49f2f2c13d01230bbd8a45790d42292bd244d92e61a5a9c7125",
                          "typeString": "literal_string \"ArthPool: You are not the admin\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1045:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1045:119:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "1045:119:2"
                },
                {
                  "id": 152,
                  "nodeType": "PlaceholderStatement",
                  "src": "1174:1:2"
                }
              ]
            },
            "id": 154,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:2:2"
            },
            "src": "1014:168:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "1262:186:2",
              "statements": [
                {
                  "expression": {
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 167,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "1272:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1287:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1272:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:16:2"
                },
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 171,
                      "name": "rftToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "1298:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1710",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 172,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "1309:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1710",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1298:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1710",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "1298:24:2"
                },
                {
                  "expression": {
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 175,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "1332:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1710",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 176,
                      "name": "_usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "1350:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1710",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1332:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1710",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1332:23:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 180,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2684,
                        "src": "1376:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 181,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4400,
                          "src": "1396:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1396:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 179,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2900,
                      "src": "1365:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1365:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1365:44:2"
                },
                {
                  "expression": {
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 185,
                      "name": "Validator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "1419:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 186,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1431:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1431:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1419:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:22:2"
                }
              ]
            },
            "id": 191,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4469616d6f6e64",
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1244:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_aadb29765cb3e4f21bde5ecd65db8e565d901b6c9394dcec22aa81b8ff2d6e2f",
                      "typeString": "literal_string \"Diamond\""
                    },
                    "value": "Diamond"
                  },
                  {
                    "hexValue": "444d47",
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1255:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5b5d0e545c547e064bc1e007e74a27d967f52e3ca9890e08c698b90aa8211137",
                      "typeString": "literal_string \"DMG\""
                    },
                    "value": "DMG"
                  }
                ],
                "id": 165,
                "modifierName": {
                  "id": 162,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3804,
                  "src": "1237:6:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1237:24:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "1200:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1710",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 156,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 155,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1710,
                      "src": "1200:6:2"
                    },
                    "referencedDeclaration": 1710,
                    "src": "1200:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1710",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "_usdt",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "1222:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1710",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 159,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 158,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1710,
                      "src": "1222:6:2"
                    },
                    "referencedDeclaration": 1710,
                    "src": "1222:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1710",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1199:36:2"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1262:0:2"
            },
            "scope": 549,
            "src": "1188:260:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "1604:459:2",
              "statements": [
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 202,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "1614:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 203,
                        "name": "tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "1629:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1644:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1629:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1614:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "1614:31:2"
                },
                {
                  "assignments": [
                    209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 209,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nodeType": "VariableDeclaration",
                      "scope": 243,
                      "src": "1655:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 208,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1655:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 211,
                  "initialValue": {
                    "id": 210,
                    "name": "tokenCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 103,
                    "src": "1675:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1655:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 213,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1708:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1708:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 215,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "1720:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 212,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3498,
                        3527
                      ],
                      "referencedDeclaration": 3498,
                      "src": "1698:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1698:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "1698:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 219,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "1753:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 220,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "1764:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 218,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4035,
                      "src": "1740:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1740:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:33:2"
                },
                {
                  "expression": {
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 223,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1784:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                          "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                        }
                      },
                      "id": 225,
                      "indexExpression": {
                        "id": 224,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "1789:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1784:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_storage",
                        "typeString": "struct TokenFactory.Diamond storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 227,
                          "name": "newItemId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 209,
                          "src": "1823:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 228,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "1846:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 229,
                          "name": "tokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 197,
                          "src": "1865:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 230,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1887:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1887:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 232,
                          "name": "_diamondPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "1911:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1938:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1957:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1976:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1995:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2014:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 226,
                        "name": "Diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "1802:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Diamond_$132_storage_ptr_$",
                          "typeString": "type(struct TokenFactory.Diamond storage pointer)"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1802:227:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond memory"
                      }
                    },
                    "src": "1784:245:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:245:2"
                },
                {
                  "expression": {
                    "id": 241,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 209,
                    "src": "2047:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 201,
                  "id": 242,
                  "nodeType": "Return",
                  "src": "2040:16:2"
                }
              ]
            },
            "functionSelector": "51011264",
            "id": 244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollectible",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "1490:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "_diamondPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "1519:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1519:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "1550:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1480:98:2"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "1595:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1595:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1594:9:2"
            },
            "scope": 549,
            "src": "1454:609:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "2141:205:2",
              "statements": [
                {
                  "assignments": [
                    251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 251,
                      "mutability": "mutable",
                      "name": "_diamond",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "2154:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond"
                      },
                      "typeName": {
                        "id": 250,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 249,
                          "name": "Diamond",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 132,
                          "src": "2154:7:2"
                        },
                        "referencedDeclaration": 132,
                        "src": "2154:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_storage_ptr",
                          "typeString": "struct TokenFactory.Diamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "baseExpression": {
                      "id": 252,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "2180:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                        "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                      }
                    },
                    "id": 254,
                    "indexExpression": {
                      "id": 253,
                      "name": "_diamondId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "2185:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2180:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2154:42:2"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 256,
                        "name": "_diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "2206:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                          "typeString": "struct TokenFactory.Diamond memory"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nftLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "2206:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2227:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2206:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2206:25:2"
                },
                {
                  "expression": {
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 262,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "2241:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                          "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                        }
                      },
                      "id": 264,
                      "indexExpression": {
                        "id": 263,
                        "name": "_diamondId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "2246:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2241:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_storage",
                        "typeString": "struct TokenFactory.Diamond storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 265,
                      "name": "_diamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "2260:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond memory"
                      }
                    },
                    "src": "2241:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "2241:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 269,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2296:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2296:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 273,
                            "name": "Validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "2316:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2308:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 271,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2308:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2308:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 275,
                        "name": "_diamondId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "2328:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 268,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3365,
                        3395
                      ],
                      "referencedDeclaration": 3365,
                      "src": "2279:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2279:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:60:2"
                }
              ]
            },
            "functionSelector": "59802f78",
            "id": 279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestDiamondLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "_diamondId",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2102:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2102:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2101:20:2"
            },
            "returnParameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2141:0:2"
            },
            "scope": 549,
            "src": "2069:277:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "2462:424:2",
              "statements": [
                {
                  "assignments": [
                    290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 290,
                      "mutability": "mutable",
                      "name": "_diamond",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "2472:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond"
                      },
                      "typeName": {
                        "id": 289,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 288,
                          "name": "Diamond",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 132,
                          "src": "2472:7:2"
                        },
                        "referencedDeclaration": 132,
                        "src": "2472:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_storage_ptr",
                          "typeString": "struct TokenFactory.Diamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 294,
                  "initialValue": {
                    "baseExpression": {
                      "id": 291,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "2498:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                        "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                      }
                    },
                    "id": 293,
                    "indexExpression": {
                      "id": 292,
                      "name": "_diamondId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 281,
                      "src": "2503:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2498:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2472:42:2"
                },
                {
                  "expression": {
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 295,
                        "name": "_diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "2524:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                          "typeString": "struct TokenFactory.Diamond memory"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "authenticate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123,
                      "src": "2524:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 298,
                      "name": "_authencity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "2548:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2524:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "2524:35:2"
                },
                {
                  "condition": {
                    "id": 301,
                    "name": "_authencity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 283,
                    "src": "2582:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 334,
                    "nodeType": "Block",
                    "src": "2713:129:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 318,
                              "name": "_diamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 290,
                              "src": "2727:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                                "typeString": "struct TokenFactory.Diamond memory"
                              }
                            },
                            "id": 320,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "nftLocked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 131,
                            "src": "2727:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2748:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2727:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "2727:26:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 327,
                                  "name": "Validator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "2792:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2784:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 325,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2784:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2784:18:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 329,
                                "name": "_diamond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 290,
                                "src": "2804:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                                  "typeString": "struct TokenFactory.Diamond memory"
                                }
                              },
                              "id": 330,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 119,
                              "src": "2804:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 331,
                              "name": "_diamondId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "2820:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 324,
                            "name": "safeTransferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3365,
                              3395
                            ],
                            "referencedDeclaration": 3365,
                            "src": "2767:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2767:64:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 333,
                        "nodeType": "ExpressionStatement",
                        "src": "2767:64:2"
                      }
                    ]
                  },
                  "id": 335,
                  "nodeType": "IfStatement",
                  "src": "2578:264:2",
                  "trueBody": {
                    "id": 317,
                    "nodeType": "Block",
                    "src": "2595:112:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 302,
                              "name": "_diamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 290,
                              "src": "2609:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                                "typeString": "struct TokenFactory.Diamond memory"
                              }
                            },
                            "id": 304,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "nftLocked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 131,
                            "src": "2609:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2630:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2609:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 307,
                        "nodeType": "ExpressionStatement",
                        "src": "2609:25:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 311,
                                "name": "_diamond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 290,
                                "src": "2665:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                                  "typeString": "struct TokenFactory.Diamond memory"
                                }
                              },
                              "id": 312,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 119,
                              "src": "2665:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 313,
                                "name": "_diamond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 290,
                                "src": "2681:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                                  "typeString": "struct TokenFactory.Diamond memory"
                                }
                              },
                              "id": 314,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 121,
                              "src": "2681:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 308,
                              "name": "rftToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "2648:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1710",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1679,
                            "src": "2648:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2648:48:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 316,
                        "nodeType": "ExpressionStatement",
                        "src": "2648:48:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 336,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "2852:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                          "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                        }
                      },
                      "id": 338,
                      "indexExpression": {
                        "id": 337,
                        "name": "_diamondId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "2857:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2852:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_storage",
                        "typeString": "struct TokenFactory.Diamond storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 339,
                      "name": "_diamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "2871:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond memory"
                      }
                    },
                    "src": "2852:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "2852:27:2"
                }
              ]
            },
            "functionSelector": "caacac96",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 286,
                "modifierName": {
                  "id": 285,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154,
                  "src": "2448:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2448:9:2"
              }
            ],
            "name": "approveDiamondAuthencity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "_diamondId",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "2386:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "_authencity",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "2406:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2406:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2385:38:2"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2462:0:2"
            },
            "scope": 549,
            "src": "2352:534:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "2962:605:2",
              "statements": [
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "_diamond",
                      "nodeType": "VariableDeclaration",
                      "scope": 414,
                      "src": "2975:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond"
                      },
                      "typeName": {
                        "id": 349,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 348,
                          "name": "Diamond",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 132,
                          "src": "2975:7:2"
                        },
                        "referencedDeclaration": 132,
                        "src": "2975:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_storage_ptr",
                          "typeString": "struct TokenFactory.Diamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 354,
                  "initialValue": {
                    "baseExpression": {
                      "id": 351,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "3001:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                        "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                      }
                    },
                    "id": 353,
                    "indexExpression": {
                      "id": 352,
                      "name": "_diamondId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "3006:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3001:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2975:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 358,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3070:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3070:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 356,
                              "name": "collateralToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "3044:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1710",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1649,
                            "src": "3044:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3044:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 361,
                            "name": "_diamond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "3084:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                              "typeString": "struct TokenFactory.Diamond memory"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 121,
                          "src": "3084:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3044:54:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20466163746f72792038323a20496e737566666963656e7420436f6c6c61746572616c20416d6f756e74",
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3100:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8834d8b72386b4fb442990d376b87772e6f65593f4c9c791b7176a5f3adb5d1f",
                          "typeString": "literal_string \"Token Factory 82: Insufficent Collateral Amount\""
                        },
                        "value": "Token Factory 82: Insufficent Collateral Amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8834d8b72386b4fb442990d376b87772e6f65593f4c9c791b7176a5f3adb5d1f",
                          "typeString": "literal_string \"Token Factory 82: Insufficent Collateral Amount\""
                        }
                      ],
                      "id": 355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3036:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3036:114:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "3036:114:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 368,
                          "name": "_diamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "3168:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                            "typeString": "struct TokenFactory.Diamond memory"
                          }
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "authenticate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 123,
                        "src": "3168:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20466163746f72792038333a204e6f7420416e2041757468656e746963204469616d6f6e6420526570726573656e746174696f6e",
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3191:59:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_351dd134429b39d27e104f78a15c46bd15f35653786d5d4798c3af637a2dce2b",
                          "typeString": "literal_string \"Token Factory 83: Not An Authentic Diamond Representation\""
                        },
                        "value": "Token Factory 83: Not An Authentic Diamond Representation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_351dd134429b39d27e104f78a15c46bd15f35653786d5d4798c3af637a2dce2b",
                          "typeString": "literal_string \"Token Factory 83: Not An Authentic Diamond Representation\""
                        }
                      ],
                      "id": 367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3160:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3160:91:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "3160:91:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3269:26:2",
                        "subExpression": {
                          "expression": {
                            "id": 374,
                            "name": "_diamond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "3270:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                              "typeString": "struct TokenFactory.Diamond memory"
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateralLocked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 125,
                          "src": "3270:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20466163746f72792038343a20416c7265616479204164646564204c69717569646174696f6e",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3297:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c44bbd17a7b8f0374d75fd764867b679495f93d1b220bb255f65aab7263c0f5c",
                          "typeString": "literal_string \"Token Factory 84: Already Added Liquidation\""
                        },
                        "value": "Token Factory 84: Already Added Liquidation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c44bbd17a7b8f0374d75fd764867b679495f93d1b220bb255f65aab7263c0f5c",
                          "typeString": "literal_string \"Token Factory 84: Already Added Liquidation\""
                        }
                      ],
                      "id": 373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3261:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3261:82:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "3261:82:2"
                },
                {
                  "expression": {
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 380,
                        "name": "_diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "3354:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                          "typeString": "struct TokenFactory.Diamond memory"
                        }
                      },
                      "id": 382,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 125,
                      "src": "3354:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3382:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3354:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:32:2"
                },
                {
                  "expression": {
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 386,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "3396:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                          "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                        }
                      },
                      "id": 388,
                      "indexExpression": {
                        "id": 387,
                        "name": "_diamondId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "3401:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3396:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_storage",
                        "typeString": "struct TokenFactory.Diamond storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 389,
                      "name": "_diamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "3415:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond memory"
                      }
                    },
                    "src": "3396:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "3396:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 395,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3463:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3463:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 399,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3483:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenFactory_$549",
                              "typeString": "contract TokenFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenFactory_$549",
                              "typeString": "contract TokenFactory"
                            }
                          ],
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3475:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 397,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3475:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3475:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 401,
                          "name": "_diamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "3490:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                            "typeString": "struct TokenFactory.Diamond memory"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 121,
                        "src": "3490:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 392,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "3434:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1710",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1691,
                      "src": "3434:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3434:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "3434:71:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 408,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3533:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3533:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 410,
                          "name": "_diamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "3545:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                            "typeString": "struct TokenFactory.Diamond memory"
                          }
                        },
                        "id": 411,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 121,
                        "src": "3545:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 405,
                        "name": "rftToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "3515:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1710",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1659,
                      "src": "3515:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3515:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "3515:45:2"
                }
              ]
            },
            "functionSelector": "e67ed454",
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDiamondLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "_diamondId",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "2921:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2921:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2920:20:2"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2962:0:2"
            },
            "scope": 549,
            "src": "2892:675:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 475,
              "nodeType": "Block",
              "src": "3665:449:2",
              "statements": [
                {
                  "assignments": [
                    424
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 424,
                      "mutability": "mutable",
                      "name": "_diamond",
                      "nodeType": "VariableDeclaration",
                      "scope": 475,
                      "src": "3675:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond"
                      },
                      "typeName": {
                        "id": 423,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 422,
                          "name": "Diamond",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 132,
                          "src": "3675:7:2"
                        },
                        "referencedDeclaration": 132,
                        "src": "3675:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_storage_ptr",
                          "typeString": "struct TokenFactory.Diamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 428,
                  "initialValue": {
                    "baseExpression": {
                      "id": 425,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "3701:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                        "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                      }
                    },
                    "id": 427,
                    "indexExpression": {
                      "id": 426,
                      "name": "_diamondId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "3706:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3701:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3675:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 430,
                            "name": "_diamond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 424,
                            "src": "3735:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                              "typeString": "struct TokenFactory.Diamond memory"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 121,
                          "src": "3735:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 432,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "3753:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3735:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20466163746f7279203131323a204e6f7420456e6f7567682052656564656d61626c6520436f6c6c61746572616c",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3762:53:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_357864d476674fe403c5ffc4d36002992f14b6b44ad472b3a0b82dbd16b11c3e",
                          "typeString": "literal_string \"Token Factory 112: Not Enough Reedemable Collateral\""
                        },
                        "value": "Token Factory 112: Not Enough Reedemable Collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_357864d476674fe403c5ffc4d36002992f14b6b44ad472b3a0b82dbd16b11c3e",
                          "typeString": "literal_string \"Token Factory 112: Not Enough Reedemable Collateral\""
                        }
                      ],
                      "id": 429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3727:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3727:89:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "3727:89:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3834:23:2",
                        "subExpression": {
                          "expression": {
                            "id": 438,
                            "name": "_diamond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 424,
                            "src": "3835:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                              "typeString": "struct TokenFactory.Diamond memory"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reedemDiamond",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 129,
                          "src": "3835:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20466163746f7279203131333a20416c7265616479204469616d6f6e642052656564656d6564",
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3859:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75ed76e1a89d3de83f28291dc4cb4dd82c990258429055f3c3db1bb27ddf5fa7",
                          "typeString": "literal_string \"Token Factory 113: Already Diamond Reedemed\""
                        },
                        "value": "Token Factory 113: Already Diamond Reedemed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75ed76e1a89d3de83f28291dc4cb4dd82c990258429055f3c3db1bb27ddf5fa7",
                          "typeString": "literal_string \"Token Factory 113: Already Diamond Reedemed\""
                        }
                      ],
                      "id": 437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3826:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3826:79:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "3826:79:2"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 444,
                        "name": "_diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "3924:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                          "typeString": "struct TokenFactory.Diamond memory"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reedemDiamond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 129,
                      "src": "3924:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3949:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3924:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "3924:29:2"
                },
                {
                  "expression": {
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 450,
                        "name": "_diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "3963:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                          "typeString": "struct TokenFactory.Diamond memory"
                        }
                      },
                      "id": 452,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "liquidityRemoved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 127,
                      "src": "3963:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3991:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3963:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "3963:32:2"
                },
                {
                  "expression": {
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 456,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "4005:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                          "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                        }
                      },
                      "id": 458,
                      "indexExpression": {
                        "id": 457,
                        "name": "_diamondId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "4010:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4005:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_storage",
                        "typeString": "struct TokenFactory.Diamond storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 459,
                      "name": "_diamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "4024:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond memory"
                      }
                    },
                    "src": "4005:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "4005:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4065:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4065:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 469,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4085:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenFactory_$549",
                              "typeString": "contract TokenFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenFactory_$549",
                              "typeString": "contract TokenFactory"
                            }
                          ],
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4077:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 467,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4077:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4077:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 471,
                          "name": "_diamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "4092:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                            "typeString": "struct TokenFactory.Diamond memory"
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 121,
                        "src": "4092:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 462,
                        "name": "rftToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "4043:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1710",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1691,
                      "src": "4043:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4043:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "4043:64:2"
                }
              ]
            },
            "functionSelector": "89344d1f",
            "id": 476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reedemDiamond",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "_diamondId",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "3621:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3621:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "3641:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3641:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3620:37:2"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3665:0:2"
            },
            "scope": 549,
            "src": "3598:516:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "4219:210:2",
              "statements": [
                {
                  "assignments": [
                    485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 485,
                      "mutability": "mutable",
                      "name": "_diamond",
                      "nodeType": "VariableDeclaration",
                      "scope": 512,
                      "src": "4232:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond"
                      },
                      "typeName": {
                        "id": 484,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 483,
                          "name": "Diamond",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 132,
                          "src": "4232:7:2"
                        },
                        "referencedDeclaration": 132,
                        "src": "4232:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_storage_ptr",
                          "typeString": "struct TokenFactory.Diamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 489,
                  "initialValue": {
                    "baseExpression": {
                      "id": 486,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "4258:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                        "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                      }
                    },
                    "id": 488,
                    "indexExpression": {
                      "id": 487,
                      "name": "_diamondId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "4263:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4258:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4232:42:2"
                },
                {
                  "expression": {
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 490,
                        "name": "_diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "4284:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                          "typeString": "struct TokenFactory.Diamond memory"
                        }
                      },
                      "id": 492,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nftLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "4284:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4305:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4284:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "4284:26:2"
                },
                {
                  "expression": {
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 496,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "4320:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Diamond_$132_storage_$",
                          "typeString": "mapping(uint256 => struct TokenFactory.Diamond storage ref)"
                        }
                      },
                      "id": 498,
                      "indexExpression": {
                        "id": 497,
                        "name": "_diamondId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "4325:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4320:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_storage",
                        "typeString": "struct TokenFactory.Diamond storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 499,
                      "name": "_diamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "4339:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                        "typeString": "struct TokenFactory.Diamond memory"
                      }
                    },
                    "src": "4320:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Diamond_$132_storage",
                      "typeString": "struct TokenFactory.Diamond storage ref"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "4320:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 505,
                            "name": "Validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "4383:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4375:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 503,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4375:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4375:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 507,
                          "name": "_diamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "4395:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Diamond_$132_memory_ptr",
                            "typeString": "struct TokenFactory.Diamond memory"
                          }
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 119,
                        "src": "4395:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 509,
                        "name": "_diamondId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "4411:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 502,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3365,
                        3395
                      ],
                      "referencedDeclaration": 3365,
                      "src": "4358:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4358:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "4358:64:2"
                }
              ]
            },
            "functionSelector": "a62e555c",
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 481,
                "modifierName": {
                  "id": 480,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154,
                  "src": "4205:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4205:9:2"
              }
            ],
            "name": "repayDiamond",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "_diamondId",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "4160:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4160:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4159:20:2"
            },
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4219:0:2"
            },
            "scope": 549,
            "src": "4138:291:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3937
            ],
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "4543:54:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 527,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "4560:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenFactory_$549",
                          "typeString": "contract TokenFactory"
                        }
                      },
                      "id": 528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 532,
                      "src": "4560:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "4560:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 526,
                  "id": 530,
                  "nodeType": "Return",
                  "src": "4553:37:2"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 523,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4517:8:2"
            },
            "parameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "4461:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4461:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "4470:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4470:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "4479:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4479:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "4488:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4488:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4460:41:2"
            },
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 525,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "4535:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4535:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4534:8:2"
            },
            "scope": 549,
            "src": "4435:162:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2746,
              3080
            ],
            "body": {
              "id": 547,
              "nodeType": "Block",
              "src": "4717:60:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 544,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "4758:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 542,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "4734:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TokenFactory_$549_$",
                          "typeString": "type(contract super TokenFactory)"
                        }
                      },
                      "id": 543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2746,
                      "src": "4734:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4734:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 541,
                  "id": 546,
                  "nodeType": "Return",
                  "src": "4727:43:2"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 538,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 536,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3804,
                  "src": "4679:6:2"
                },
                {
                  "id": 537,
                  "name": "AccessControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2986,
                  "src": "4687:13:2"
                }
              ],
              "src": "4670:31:2"
            },
            "parameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "4630:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4630:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4629:20:2"
            },
            "returnParameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "4711:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4711:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4710:6:2"
            },
            "scope": 549,
            "src": "4603:174:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 550,
        "src": "397:4382:2"
      }
    ],
    "src": "32:4748:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xC6a885fD0c4194a74c0191cbDD2057C89B3E73cE",
      "transactionHash": "0x6b7ea1bbb5d2b80b736302e14d5fb6a7e627c9f692dd8331a5e44b5cf14d4bbb"
    },
    "1621022499528": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x5aE5E1f98393E2E6FAB77977AaE7Fa9ca97194ea",
      "transactionHash": "0xd9bf2774622d624e038efe6f978bd02d28d2ae9d52f5530bc8044332689ceabe"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-06-15T20:46:44.482Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}